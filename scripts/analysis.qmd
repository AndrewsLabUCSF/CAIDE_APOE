---
title: "Population-specific effects of APOE in NACC"
format: html
editor: visual
knitr: 
  opts_chunk: 
    code-fold: true
    warning: false
    error: false
    message: false
    echo: false
editor_options: 
  chunk_output_type: inline
---

```{r}
#| label: packages
#| code-summary: Load R Packages
#| echo: false

library(tidyverse)
library(glue)
library(survival)
library(survminer)
library(broom)
library(gtsummary)
library(gt)
library(emmeans)
library(gtools)

`%nin%` = negate(`%in%`)
theme_gtsummary_compact()

# Compares b/se using z score method - doi: 10.1038/s41380-019-0596-9
fzscore <- function(b1, b2, se1, se2){(b1 - b2)/sqrt(se1^2 + se2^2)}
getwd()
```

# Read in Data

```{r}
#| label: import
#| code-summary: Import data 

library(here)

dat_path = here("data/joint_df.tsv.gz")
dat <- read_tsv(dat_path) %>% 
  # read_rds('data/nacc.rds') %>%
  # filter(NACCAVST >= 2) %>%
  mutate(
    apoe4 = case_when(
      apoe_geno %in% c(22, 23, 33) ~ 0,
      apoe_geno %in% c(24, 34, 44) ~ 1
    ), 
    apoe_geno = as.character(apoe_geno),
    apoe_geno = fct_recode(apoe_geno,
      'e2+' = '22', 'e2+' = '23', "e3/e3" = "33", "e2/e4" = "24", "e3/e4" = "34", "e4/e4" = "44"
    ),
    apoe_geno = fct_relevel(apoe_geno, "e3/e3"),
    apoe = fct_relevel(apoe, "e3/e3"), 
    race = fct_relevel(race, "NHW"), 
    cohort = fct_relevel(cohort, "NACC"), 
    caide_apoe = fct_relevel(caide_apoe, "mid_e3/e3"), 
    mcaide_apoe = fct_relevel(mcaide_apoe, "mid_e3/e3") 
  )


```

# Missingness

```{r}
#| label: function
#| code-summary: Function
#| echo: false
get_na_by_cols <- function(df){
  #calculate number of missing values as a %
  result <- data.frame(unclass(apply(X = is.na(df), MARGIN = 2, FUN = mean, simplify = TRUE) *100))
  df_na <- cbind("name" = 0,result)
  df_na["name"] <- rownames(df_na)
  rownames(df_na) <- NULL
  names(df_na)[2] <- c("percentNA")
  result <- df_na %>% arrange(desc(percentNA))
  result["percentNA"] <- round(result["percentNA"],3)
  return(result)
}

get_na_by_cols(dat)[c(1:14),] %>% gt() 

get_na_by_cols(nacc)
# get_na_by_cols(adni)
# 
# dat %>% select(total_c, caide_u_chol, mcaide_u_chol, origprot,
#                caide_wo_chol, mcaide_wo_chol, bmi, bpsys, hypchol, 
#                caide_chol, mcaide_chol, educ) %>%
#   tbl_summary() %>% 
#   add_n(statistic = "{n_miss} ({p_miss}%)") %>%
#   modify_header(n = "**Missing**")
```



## Cohort Description

```{r}
#| label: table demo
#| code-summary: Table demo
#| tbl-cap: Table 1 NACC Cohort Characteristics

tab_demo <- dat %>% 
   dplyr::select(race, cohort, gender, age) %>%
  mutate(
    gender = as.factor(gender),
    # gender = fct_recode(gender,  'Male' = '1', "Female" = "2")
  ) %>%
  tbl_summary(statistic = list(all_continuous() ~ "{mean} ({sd})"), 
               label = list(gender ~ "Gender",
                           age ~ "Age",
                           race ~ "Race") 
              ) %>% add_n() 

tab_demo

# as_gt(tab_rf) %>%
#   gt::gtsave(., "results/table_rf.docx")

```

```{r}
#| label: table 1
#| code-summary: Table 1
#| tbl-cap: Table 1 NACC Cohort Characteristics

tab_rf <- dat %>% 
  # dplyr::select(race, SEX, NACCAGE, i_EDUC, i_NACCBMI, i_hyperten, i_diabetes, i_hypchol, apoe, CDRSUM, NACCUDSD, NACCETPR) %>%
   dplyr::select(race, cohort, gender, age, i_educ, i_bmi, i_hyperten, i_hypchol, 
                caide, caide_cat, mcaide, mcaide_cat, apoe, cdrsb, naccudsd, naccetpr) %>%
  mutate(
    naccudsd = fct_recode(as.factor(naccudsd), 'CU' = '1', "MCI" = "3", "ADRD" = "4"),
    naccetpr = fct_recode(as.factor(naccetpr), 
                          'CU' = '88', "AD" = "1", "LBD" = "2", "PSP" = '4',  
                          'CBD' = "5", "FTLD" = '6', "FTLD" = '7', 'VCID' = '8'),
    naccetpr = fct_relevel(naccetpr),
    gender = as.factor(gender),
    # gender = fct_recode(gender,  'Male' = '1', "Female" = "2")
  ) %>%
  tbl_summary(
    by = race,
    statistic = list(all_continuous() ~ "{mean} ({sd})"),
    label = list(gender ~ "Gender",
                           age ~ "Age",
                           i_educ ~ "Education",
                           race ~ "Race",
                           naccudsd ~ "Diagnosis",
                           naccetpr ~ "ADRD",
                           i_bmi ~ "BMI",
                           i_hyperten ~ "Hypertension",
                           i_hypchol ~ "Hypercholesterolemia",
                           caide ~ "CAIDE",
                           mcaide ~ "mCAIDE",
                           apoe ~ "APOE", 
                           cohort ~ "Cohort", 
                           caide_cat ~ "CAIDE",
                           mcaide_cat ~ "mCAIDE") 
              ) %>%
  add_n() 

tab_rf

as_gt(tab_rf) %>%
  gt::gtsave(., "results/table_rf.docx")
```

```{r}
#| label: table 1
#| code-summary: Table 1
#| tbl-cap: Sex stratified

tab_nhw_sex <- dat %>% 
   dplyr::select(race, cohort, gender, age, i_educ, i_bmi, i_hyperten, i_hypchol, 
                caide_nosex, mcaide_nosex, apoe, cdrsb, naccudsd) %>%
  mutate(
    naccudsd = fct_recode(as.factor(naccudsd), 'CU' = '1', "MCI" = "3", 
                          "ADRD" = "4"),
    # naccetpr = fct_recode(as.factor(naccetpr), 
    #                       'CU' = '88', "AD" = "1", "LBD" = "2", "PSP" = '4',  
    #                       'CBD' = "5", "FTLD" = '6', "FTLD" = '7', 
    #                         'VCID' = '8'),
    # naccetpr = fct_relevel(naccetpr),
    gender = as.factor(gender),
    # gender = fct_recode(gender,  'Male' = '1', "Female" = "2")
  ) %>%
  filter(race == "NHW") %>%
  tbl_summary(by = gender,
              statistic = list(all_continuous() ~ "{mean} ({sd})"), 
              type = list(caide_nosex ~ "continuous"),
               label = list(gender ~ "Gender",
                           age ~ "Age",
                           i_educ ~ "Education",
                           race ~ "Race",
                           naccudsd ~ "Diagnosis",
                           # naccetpr ~ "ADRD",
                           i_bmi ~ "BMI",
                           i_hyperten ~ "Hypertension",
                           i_hypchol ~ "Hypercholesterolemia",
                           caide_nosex ~ "CAIDE",
                           mcaide_nosex ~ "mCAIDE",
                           apoe ~ "APOE", 
                           cohort ~ "Cohort") 
              ) %>%
  add_n() 

tab_nhw_sex

as_gt(tab_nhw_sex) %>%
  gt::gtsave(., "results/table_sex_nhw.docx")

tab_bla_sex <- dat %>% 
  # dplyr::select(race, SEX, NACCAGE, i_EDUC, i_NACCBMI, i_hyperten, i_diabetes, i_hypchol, apoe, CDRSUM, NACCUDSD, NACCETPR) %>%
   dplyr::select(race, cohort, gender, age, i_educ, i_bmi, i_hyperten, i_hypchol, 
                caide_nosex, mcaide_nosex, apoe, cdrsb, naccudsd) %>%
  mutate(
    naccudsd = fct_recode(as.factor(naccudsd), 'CU' = '1', "MCI" = "3", "ADRD" = "4"),
    # naccetpr = fct_recode(as.factor(naccetpr), 
    #                       'CU' = '88', "AD" = "1", "LBD" = "2", "PSP" = '4',  
    #                       'CBD' = "5", "FTLD" = '6', "FTLD" = '7', 'VCID' = '8'),
    # naccetpr = fct_relevel(naccetpr),
    gender = as.factor(gender),
    # gender = fct_recode(gender,  'Male' = '1', "Female" = "2")
  ) %>%
  filter(race == "Black") %>%
  tbl_summary(by = gender,
              statistic = list(all_continuous() ~ "{mean} ({sd})"), 
              type = list(caide_nosex ~ "continuous"),
               label = list(gender ~ "Gender",
                           age ~ "Age",
                           i_educ ~ "Education",
                           race ~ "Race",
                           naccudsd ~ "Diagnosis",
                           # naccetpr ~ "ADRD",
                           i_bmi ~ "BMI",
                           i_hyperten ~ "Hypertension",
                           i_hypchol ~ "Hypercholesterolemia",
                           caide_nosex ~ "CAIDE",
                           mcaide_nosex ~ "mCAIDE",
                           apoe ~ "APOE", 
                           cohort ~ "Cohort") 
              ) %>%
  add_n()  

tab_bla_sex

as_gt(tab_bla_sex) %>%
  gt::gtsave(., "results/table_sex_bla.docx")

tab_asn_sex <- dat %>% 
  # dplyr::select(race, SEX, NACCAGE, i_EDUC, i_NACCBMI, i_hyperten, i_diabetes, i_hypchol, apoe, CDRSUM, NACCUDSD, NACCETPR) %>%
   dplyr::select(race, cohort, gender, age, i_educ, i_bmi, i_hyperten, i_hypchol, 
                caide_nosex, mcaide_nosex, apoe, cdrsb, naccudsd) %>%
  mutate(
    naccudsd = fct_recode(as.factor(naccudsd), 'CU' = '1', "MCI" = "3", "ADRD" = "4"),
    # naccetpr = fct_recode(as.factor(naccetpr), 
    #                       'CU' = '88', "AD" = "1", "LBD" = "2", "PSP" = '4',  
    #                       'CBD' = "5", "FTLD" = '6', "FTLD" = '7', 'VCID' = '8'),
    # naccetpr = fct_relevel(naccetpr),
    gender = as.factor(gender),
    # gender = fct_recode(gender,  'Male' = '1', "Female" = "2")
  ) %>%
  filter(race == "Asian") %>%
  tbl_summary(by = gender,
              statistic = list(all_continuous() ~ "{mean} ({sd})"), 
              type = list(caide_nosex ~ "continuous"),
               label = list(gender ~ "Gender",
                           age ~ "Age",
                           i_educ ~ "Education",
                           race ~ "Race",
                           naccudsd ~ "Diagnosis",
                           # naccetpr ~ "ADRD",
                           i_bmi ~ "BMI",
                           i_hyperten ~ "Hypertension",
                           i_hypchol ~ "Hypercholesterolemia",
                           caide_nosex ~ "CAIDE",
                           mcaide_nosex ~ "mCAIDE",
                           apoe ~ "APOE", 
                           cohort ~ "Cohort") 
              ) %>%
  add_n()  

tab_asn_sex

as_gt(tab_asn_sex) %>%
  gt::gtsave(., "results/table_sex_asn.docx")

tab_his_sex <- dat %>% 
  # dplyr::select(race, SEX, NACCAGE, i_EDUC, i_NACCBMI, i_hyperten, i_diabetes, i_hypchol, apoe, CDRSUM, NACCUDSD, NACCETPR) %>%
   dplyr::select(race, cohort, gender, age, i_educ, i_bmi, i_hyperten, i_hypchol, 
                caide_nosex, mcaide_nosex, apoe, cdrsb, naccudsd) %>%
  mutate(
    naccudsd = fct_recode(as.factor(naccudsd), 'CU' = '1', "MCI" = "3", "ADRD" = "4"),
    # naccetpr = fct_recode(as.factor(naccetpr), 
    #                       'CU' = '88', "AD" = "1", "LBD" = "2", "PSP" = '4',  
    #                       'CBD' = "5", "FTLD" = '6', "FTLD" = '7', 'VCID' = '8'),
    # naccetpr = fct_relevel(naccetpr),
    gender = as.factor(gender),
    # gender = fct_recode(gender,  'Male' = '1', "Female" = "2")
  ) %>%
  filter(race == "Hispanic") %>%
  tbl_summary(by = gender,
              statistic = list(all_continuous() ~ "{mean} ({sd})"), 
              type = list(caide_nosex ~ "continuous"),
               label = list(gender ~ "Gender",
                           age ~ "Age",
                           i_educ ~ "Education",
                           race ~ "Race",
                           naccudsd ~ "Diagnosis",
                           # naccetpr ~ "ADRD",
                           i_bmi ~ "BMI",
                           i_hyperten ~ "Hypertension",
                           i_hypchol ~ "Hypercholesterolemia",
                           caide_nosex ~ "CAIDE",
                           mcaide_nosex ~ "mCAIDE",
                           apoe ~ "APOE", 
                           cohort ~ "Cohort") 
              ) %>%
  add_n()  

tab_his_sex

as_gt(tab_his_sex) %>%
  gt::gtsave(., "results/table_sex_his.docx")

```

## Table 1 with MCI, Dementia etc

```{r}
#| label: table 1
#| code-summary: Table 1
#| tbl-cap: Table 1 NACC Cohort Characteristics

# tab_caide <- dat %>% 
#   dplyr::select(race, apoe, caide_age, caide_sex, caide_educ, caide_bmi, caide_sbp, i_caide_chol, caide, caide_missing, caide_cat, caide_apoe) %>%
#   tbl_summary(by = race,
#               statistic = list(all_continuous() ~ "{mean} ({sd})")) %>%
#   add_n() 

#naccudsd = fct_recode(as.factor(naccudsd), 'CU' = '1', "MCI" = "3", "ADRD" = "4")


dat %>% 
  dplyr::select(race, apoe, caide_age, caide_sex, caide_educ, caide_bmi,
                caide_sbp,i_caide_chol, caide, caide_missing, caide_cat,
                caide_apoe,naccudsd) %>%
  #filter(naccudsd == 1 | naccudsd == 3) %>% 
  mutate(naccudsd = case_when(
         naccudsd == 1 ~ "CU",
         naccudsd== 3 ~ "MCI",
         naccudsd == 4 ~ "ADRD"
  )) %>% 
  tbl_strata(
    strata = naccudsd,
    ~.x %>%
      tbl_summary(
        by = race,
        statistic = list(all_continuous() ~ "{mean} ({sd})")
      ) %>% 
      modify_header(all_stat_cols() ~ "**{level}**")
      #.header = "**CU:{level}**, N = {n}"
    )


#gtsave(., "results/table_caid.docx")
```

```{r}
#| label: table 1.1
#| code-summary: Table 1.1
#| tbl-cap: Table 1.1 NACC Cohort Characteristics

tab_mcaide <- dat %>% 
  dplyr::select(race, apoe, mcaide_age, mcaide_sex, mcaide_educ, mcaide_bmi, mcaide_sbp, i_mcaide_chol, 
                mcaide, mcaide_missing, mcaide_cat, mcaide_apoe) %>%
  tbl_summary(by = race,
              statistic = list(all_continuous() ~ "{mean} ({sd})")) %>%
  add_n() 

tab_mcaide

as_gt(tab_mcaide) %>%
  gt::gtsave(., "results/table_mcaid.docx")

```

## Descriptive statistics

```{r}
#| label: descriptive_statistics
#| code-summary: Descriptive Statistics
#| tbl-cap: Table 1.1 NACC Cohort Characteristics

## Chisq
### Function to perform chi-square test and tidy results
run_chi_square <- function(data, comparison, groups, adjust_p = FALSE, n_tests = 1) {
  test_result <- chisq.test(data[, groups], correct = FALSE)
  tidy_result <- tidy(test_result) %>%
    mutate(comparison = comparison,
           p = format.pval(p.value, digits = 2, eps = 1e-100))
  
  if(adjust_p) {
    tidy_result <- tidy_result %>%
      mutate(p.adj = p.adjust(p.value, "bonferroni", n_tests),
             p.adj = format.pval(p.adj, digits = 2, eps = 1e-100))
  }

  tidy_result %>% relocate(comparison)
}

#### Gender
gender.xtab <- xtabs(~ gender + race, data = dat)

gender.comparisons <- list(
  list(comparison = "Gender", groups = colnames(apoe4.xtab)),
  list(comparison = "Asian - Black", groups = c("Asian", "Black")),
  list(comparison = "Asian - Hispanic", groups = c("Asian", "Hispanic")),
  list(comparison = "Asian - NHW", groups = c("Asian", "NHW")),
  list(comparison = "Black - Hispanic", groups = c("Black", "Hispanic")),
  list(comparison = "Black - NHW", groups = c("Black", "NHW")),
  list(comparison = "Hispanic - NHW", groups = c("Hispanic", "NHW"))
)

gender.res <- map_dfr(gender.comparisons, ~run_chi_square(gender.xtab, .x$comparison, .x$groups, adjust_p = TRUE, n_tests = 6))

### Hypercholestemia
hypchol.xtab <- xtabs(~ i_hypchol + race, data = dat)

hypchol.comparisons <- list(
  list(comparison = "Hypercholesterolemia ", groups = colnames(apoe4.xtab)),
  list(comparison = "Asian - Black", groups = c("Asian", "Black")),
  list(comparison = "Asian - Hispanic", groups = c("Asian", "Hispanic")),
  list(comparison = "Asian - NHW", groups = c("Asian", "NHW")),
  list(comparison = "Black - Hispanic", groups = c("Black", "Hispanic")),
  list(comparison = "Black - NHW", groups = c("Black", "NHW")),
  list(comparison = "Hispanic - NHW", groups = c("Hispanic", "NHW"))
)

hypchol.res <- map_dfr(hypchol.comparisons, ~run_chi_square(hypchol.xtab, .x$comparison, .x$groups, adjust_p = TRUE, n_tests = 6))

### Hypertension
hyperten.xtab <- xtabs(~ i_hyperten + race, data = dat)

htn.comparisons <- list(
  list(comparison = "Hypertension", groups = colnames(apoe4.xtab)),
  list(comparison = "Asian - Black", groups = c("Asian", "Black")),
  list(comparison = "Asian - Hispanic", groups = c("Asian", "Hispanic")),
  list(comparison = "Asian - NHW", groups = c("Asian", "NHW")),
  list(comparison = "Black - Hispanic", groups = c("Black", "Hispanic")),
  list(comparison = "Black - NHW", groups = c("Black", "NHW")),
  list(comparison = "Hispanic - NHW", groups = c("Hispanic", "NHW"))
)

htn.res <- map_dfr(htn.comparisons, ~run_chi_square(hyperten.xtab, .x$comparison, .x$groups, adjust_p = TRUE, n_tests = 6))

### Diagnosis 
dx.xtab <- xtabs(~ naccudsd + race, data = dat)
chisq.test(dx.xtab, correct = F) %>% tidy() %>% mutate(p = format.pval(p.value, digits = 2, eps = 1e-100))

dx.xtab <- xtabs(~ dx + race, data = dat)

dx.comparisons <- list(
  list(comparison = "Diagnosis", groups = colnames(apoe4.xtab)),
  list(comparison = "Asian - Black", groups = c("Asian", "Black")),
  list(comparison = "Asian - Hispanic", groups = c("Asian", "Hispanic")),
  list(comparison = "Asian - NHW", groups = c("Asian", "NHW")),
  list(comparison = "Black - Hispanic", groups = c("Black", "Hispanic")),
  list(comparison = "Black - NHW", groups = c("Black", "NHW")),
  list(comparison = "Hispanic - NHW", groups = c("Hispanic", "NHW"))
)

dx.res <- map_dfr(dx.comparisons, ~run_chi_square(dx.xtab, .x$comparison, .x$groups, adjust_p = TRUE, n_tests = 6))

### APOE 
apoe.xtab <- xtabs(~ apoe + race, data = dat)
chisq.test(apoe.xtab, correct = F) %>% tidy() %>% mutate(p = format.pval(p.value, digits = 2, eps = 1e-100))

apoe4.xtab <- xtabs(~ apoe4 + race, data = dat)

apoe4.comparisons <- list(
  list(comparison = "APOE e4", groups = colnames(apoe4.xtab)),
  list(comparison = "Asian - Black", groups = c("Asian", "Black")),
  list(comparison = "Asian - Hispanic", groups = c("Asian", "Hispanic")),
  list(comparison = "Asian - NHW", groups = c("Asian", "NHW")),
  list(comparison = "Black - Hispanic", groups = c("Black", "Hispanic")),
  list(comparison = "Black - NHW", groups = c("Black", "NHW")),
  list(comparison = "Hispanic - NHW", groups = c("Hispanic", "NHW"))
)

apoe4.res <- map_dfr(apoe4.comparisons, ~run_chi_square(apoe4.xtab, .x$comparison, .x$groups, adjust_p = TRUE, n_tests = 6))

### Combined Chisqr
chisqr_res <- bind_rows(
  gender.res, hypchol.res, htn.res, dx.res, apoe4.res
) %>%
  mutate(
    statistic = round(statistic, 2), 
    method = ifelse(str_detect(comparison, "-"), "partitioned", "full")) %>%
  select(-p.value)

chisqr_res %>%
  write_csv("results/chisqr_descriptives.csv")

## ANOVA
### Age
age_mod <- aov(age ~ race, data = joint) 
age.res <- bind_rows (
  age_mod %>% car::Anova(., type="III") %>% tidy() %>% 
    mutate(variable = "Age"), 
  TukeyHSD(age_mod, "race") %>% tidy()
)

### Education
educ_mod <- aov(i_educ ~ race, data = joint) 
educ.res <- bind_rows (
  educ_mod %>% car::Anova(., type="III") %>% tidy() %>% 
    mutate(variable = "Education"), 
  TukeyHSD(educ_mod, "race") %>% tidy()
)

### BMI
bmi_mod <- aov(i_bmi ~ race, data = joint) 
bmi.res <- bind_rows (
  bmi_mod %>% car::Anova(., type="III") %>% tidy() %>% 
    mutate(variable = "BMI"), 
  TukeyHSD(bmi_mod, "race") %>% tidy()
)

### CAIDE 
caide_mod <- aov(caide ~ race, data = joint) 
caide.res <- bind_rows (
  caide_mod %>% car::Anova(., type="III") %>% tidy() %>% 
    mutate(variable = "CAIDE"), 
  TukeyHSD(caide_mod, "race") %>% tidy()
)

### mCAIDE
mcaide_mod <- aov(mcaide ~ race, data = joint) 
mcaide.res <- bind_rows (
  mcaide_mod %>% car::Anova(., type="III") %>% tidy() %>% 
    mutate(variable = "mCAIDE"), 
  TukeyHSD(mcaide_mod, "race") %>% tidy()
)

### Export
anova_res <- bind_rows(
  age.res, educ.res, bmi.res, caide.res, mcaide.res
) %>%
  filter(!str_detect(term, "Intercept|Residuals")) %>%
  relocate(variable) %>%
  rename(diff = estimate) %>%
  mutate(
          p.value = format.pval(p.value, digits = 2, eps = 1e-100), 
          adj.p.value = format.pval(adj.p.value, digits = 2, eps = 1e-100), 
          diff = round(diff, 2), 
          conf.low = round(conf.low, 2), 
          conf.high = round(conf.high, 2), 
          statistic = round(statistic, 2),
          sumsq = round(sumsq, 2),
  ) %>%
    select(-term, -null.value) 

anova_res %>%
  write_csv("results/anova_descriptives.csv")

## Sample size differences 
nhw_ss <- filter(dat, race == "NHW") %>% nrow()
asn_ss <- filter(dat, race == "Asian")  %>% nrow()
bla_ss <- filter(dat, race == "Black") %>% nrow()
his_ss <- filter(dat, race == "Hispanic") %>% nrow()

# Calculate the orders of magnitude
order_of_magnitude_nhw <- floor(log10(nhw_ss))
order_of_magnitude_asn <- floor(log10(asn_ss))
order_of_magnitude_bla <- floor(log10(bla_ss))
order_of_magnitude_his <- floor(log10(his_ss))

# Calculate the difference in orders of magnitude
abs(order_of_magnitude_nhw - order_of_magnitude_bla)
abs(order_of_magnitude_nhw - order_of_magnitude_asn)
abs(order_of_magnitude_nhw - order_of_magnitude_his)

print(difference_in_orders)
```

## Baseline Regression Models

### APOE Genotype

```{r}
#| label: apoe_regression_models
#| code-summary: APOE genotype Regression Models

apoe_mod_fit <- function(data){
  # glm(dx ~ apoe_geno + SEX + aoo, data = data, family = 'binomial')
  glm(dx ~ apoe_geno + gender + age + cohort, data = data, family = 'binomial')
}

res <- bind_rows(
  dat %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD + MCI",
      res = map(data, apoe_mod_fit), 
    ) %>%
    select(-data), 

  dat %>%
    filter(naccudsd %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD",
      res = map(data, apoe_mod_fit), 
    ) %>%
    select(-data), 
  
  dat %>%
    filter(naccetpr %in% c(1, 88)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD + MCI",
      res = map(data, apoe_mod_fit), 
    ) %>%
    select(-data), 

  dat %>%
    filter(naccetpr %in% c(1, 88)) %>%
    filter(naccudsd %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD",
      res = map(data, apoe_mod_fit), 
    ) %>%
    select(-data), 
) %>%
  mutate(
    fit = map(res, glance),
    df = map(res, tidy), 
  )

apoe_geno_res <- res %>%
  select(race, outcome, df) %>%
  unnest(cols = df) %>%
  ungroup() %>%
  filter(str_detect(term, 'apoe')) %>%
  mutate(
    lci = estimate - (std.error * 1.96),
    hci = estimate + (std.error * 1.96), 
    or = exp(estimate),
    or_lci = exp(lci),
    or_hci = exp(hci),
    term = str_replace(term, "apoe_geno", ""), 
    term = fct_relevel(term, 'e2+', 'e2/e4', 'e3/e4', 'e4/e4'),    
  )
```

```{r}
#| label: apoe_difference
#| code-summary: APOE genotype differences

apoe_diff <- apoe_geno_res %>%
  select(race, outcome, term, b = estimate, se = std.error) %>%
  pivot_wider(names_from = race, values_from = c(b, se)) %>%
  mutate(.,
         ## Black vs NHW
         diff_nhw_bla = fzscore(b_NHW, b_Black, se_NHW, se_Black),
         p_diff_nhw_bla = 2*pnorm(q=abs(diff_nhw_bla), lower.tail=FALSE),
         # NHW vs Hispanic
         diff_nhw_his = fzscore(b_NHW, b_Hispanic, se_NHW, se_Hispanic), 
         p_diff_nhw_his = 2*pnorm(q=abs(diff_nhw_his), lower.tail=FALSE),
         # NHW vs Asian
         diff_nhw_asi = fzscore(b_NHW, b_Asian, se_NHW, se_Asian), 
         p_diff_nhw_asi = 2*pnorm(q=abs(diff_nhw_asi), lower.tail=FALSE),
    
         # Black vs Hispanic
         diff_bla_his = fzscore(b_Black, b_Hispanic, se_Black, se_Hispanic), 
         p_diff_bla_his = 2*pnorm(q=abs(diff_bla_his), lower.tail=FALSE),
         # Black vs Asian
         diff_bla_asi = fzscore(b_Black, b_Asian, se_Black, se_Asian), 
         p_diff_bla_asi = 2*pnorm(q=abs(diff_bla_asi), lower.tail=FALSE),
         
         # Hispanic vs Asian
         diff_his_asi = fzscore(b_Hispanic, b_Asian, se_Hispanic, se_Asian), 
         p_diff_his_asi = 2*pnorm(q=abs(diff_his_asi), lower.tail=FALSE)
  )

apoe_diff_long <- full_join(
  apoe_diff %>%
    select(term, outcome, starts_with('diff')) %>%
    pivot_longer(
      cols = starts_with('diff'),
      names_to = 'contrast', 
      values_to = 'z', 
      names_prefix = "diff_",
    ),
  
  apoe_diff %>%
    select(term, outcome, starts_with('p_')) %>%
    pivot_longer(
      cols = starts_with('p_'),
      names_to = 'contrast', 
      values_to = 'p', 
      names_prefix = "p_diff_",
    )
) %>%
  separate(contrast, sep = "_", into = c("race1", "race2")) %>%
  mutate(
    stars = case_when(
      p > 0.05 ~ "", 
      between(p,  0.01, 0.05) ~ "*",
      between(p, 0.001, 0.01) ~ "**",
      p < 0.001 ~ "***"
    )
  )

df_pval <- filter(apoe_diff_long, p < 0.05) %>%
  rename(group1 = race1, group2 = race2) %>%
  mutate(y.position = c(3, 3, 3, 3, 3), 
         group1 = case_when(
           group1 == "nhw" ~ "NHW", 
           group1 == "bla" ~ "Black", 
           group1 == "jpa" ~ "Asian", 
           group1 == "his" ~ "Hispanic"
         ), 
         group2 = case_when(
           group2 == "nhw" ~ "NHW", 
           group2 == "bla" ~ "Black", 
           group2 == "jpa" ~ "Asian", 
           group2 == "his" ~ "Hispanic"
         ),
         race = NA, 
         reference = NA,
          term = fct_recode(term, "ε2+" = "e2+", "ε2/ε4" = "e2/e4", "ε3/ε4" = "e3/e4", "ε4/ε4" = "e4/e4")

  )
```

```{r}
#| label: apoe_plots
#| code-summary: APOE genotype plots

theme.size = 8

apoe_geno_res_p <- apoe_geno_res %>%
    # filter(., outcome == "AD") %>%
    #   add_row(
    #   outcome = c("AD", "AD + MCI", "ADRD", "ADRD + MCI"),
    #   race = c('Black', 'Hispanic', 'Asian',  'NHW'),
    #   or = 1,
    #   term =  "e3/e3",
    # ) %>%
  mutate(race = fct_relevel(race, 'Black', 'Hispanic', 'Asian',  'NHW'), 
        term = fct_recode(term, "ε2+" = "e2+",  "ε3/ε3 \n(reference)" = "e3/e3",
                          "ε2/ε4" = "e2/e4", "ε3/ε4" = "e3/e4", "ε4/ε4" = "e4/e4"),
        term = fct_relevel(term, "ε2+", "ε3/ε3 \n(reference)", "ε2/ε4", "ε3/ε4", "ε4/ε4"),
        reference = ifelse(or == 1, TRUE, FALSE)
        ) %>%
  ggplot(., aes(x = race, y = or, color = race)) + 
    facet_grid(cols = vars(term), rows = vars(outcome)) + 
    geom_hline(yintercept = 1, linetype = 2) + 
    geom_point() + 
    geom_linerange(aes(ymin = or_lci, ymax = or_hci), linewidth = 0.75) + 
    scale_y_continuous("Odds Ratio", trans = 'log', 
                       breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32), 
                       labels = c(0.25, 0.5, 1, 2, 4, 8, 16, 32)
    ) + 
    scale_color_manual(values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")) + 
    theme_bw() + 
    theme(
      text = element_text(size = theme.size),
      axis.text.x = element_text(angle = 315, vjust = 0.5, hjust=0), 
      axis.title.x = element_blank(),
      legend.position = "bottom", 
      strip.background = element_blank(), 
      strip.text = element_text(face = 'bold')
      ) + 
  ggprism::add_pvalue(df_pval #%>% filter(outcome == "AD")
                      , bracket.nudge.y = 3, label = "{stars}", colour = 'black', tip.length = 0.01, bracket.size = 0.2) 

apoe_geno_res_p
ggsave("results/figures/joint_apoe_race_all_bl.png", plot = apoe_geno_res_p, width = 9, height = 5, units = 'in')

```

### CAIDE
```{r}
library(pROC)
glm(dx ~ race + apoe + z_caide + cohort, data = dat, family = 'binomial') %>% 
  tidy() %>%
  mutate(
    or = exp(estimate), 
    or = round(or, 2),
    lci = exp(estimate - std.error * 1.96), 
    lci = round(lci, 2),
    uci = exp(estimate + std.error * 1.96), 
    uci = round(uci, 2),
    p = format.pval(p.value, digits = 2, eps = 1e-100), 
    out = glue("OR [95% CI] = {or} [{lci}, {uci}], p = {p}")
  )

# glm(dx_lv ~ race + apoe + z_caide, data = dat, family = 'binomial') %>% 
#   tidy()
# 
# lm(ad_age_lv ~ race + apoe + z_caide, data = dat) %>% 
#   tidy()

# Fit the logistic regression model
dat.test <- dat %>% filter(race == "Hispanic") %>%
    filter(naccetpr %in% c(1, 88)) %>%
    filter(naccudsd %nin% c(3))
model <- glm(dx ~ apoe + age + gender + i_educ + i_bmi + i_bpsys + 
                  i_hypchol, data = dat.test, family = 'binomial')
# Predict probabilities on the original data set
probabilities <- predict(model, type = "response")
# Actual outcomes
actuals <- dat.test$dx
# Calculate the AUC
roc_curve <- roc(actuals, probabilities)
auc(roc_curve)
```

#### Regresion

```{r}
#| label: regression_models
#| code-summary: Regression Models

caide_mod_fit <- function(data){
  glm(dx ~ apoe + z_caide + cohort, data = data, family = 'binomial')
}

caide_res <- bind_rows(
  dat %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD + MCI",
      res = map(data, caide_mod_fit), 
    ), 

  dat %>%
    filter(naccudsd %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD",
      res = map(data, caide_mod_fit), 
    ), 
  
  dat %>%
    filter(naccetpr %in% c(1, 88)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD + MCI",
      res = map(data, caide_mod_fit), 
    ), 

  dat %>%
    filter(naccetpr %in% c(1, 88)) %>%
    filter(naccudsd %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD",
      res = map(data, caide_mod_fit), 
    ), 
) %>%
  mutate(
    fit = map(res, glance),
    df = map(res, tidy),
    pred = map2(res, data, predict, type = 'response'), 
  ) %>%
  select(-data)

caide_res.df <- caide_res %>%
  select(race, outcome, df) %>%
  unnest(cols = df) %>%
  ungroup() %>%
  filter(str_detect(term, 'apoe|caide')) %>%
  mutate(
    lci = estimate - (std.error * 1.96),
    hci = estimate + (std.error * 1.96), 
    or = exp(estimate),
    or_lci = exp(lci),
    or_hci = exp(hci),
    term = str_replace(term, "apoe", ""), 
    term = fct_relevel(term, 'e2+', 'e4+', 'z_caide'),    
    race = fct_relevel(race, "Black", "Hispanic", "Asian", "NHW"), 
    term = fct_recode(term, "ε2+" = "e2+", "ε4+" = "e4+", "CAIDE" = "z_caide")
  )
```

#### APOE

```{r}
#| label: apoe_difference
#| code-summary: APOE genotype differences

caide_diff <- caide_res.df %>%
  select(race, outcome, term, b = estimate, se = std.error, p = p.value ) %>%
  pivot_wider(names_from = race, values_from = c(b, se, p)) %>%
  mutate(.,
         ## Black vs NHW
         diff_nhw_bla = fzscore(b_NHW, b_Black, se_NHW, se_Black),
         p_diff_nhw_bla = 2*pnorm(q=abs(diff_nhw_bla), lower.tail=FALSE),
         # NHW vs Hispanic
         diff_nhw_his = fzscore(b_NHW, b_Hispanic, se_NHW, se_Hispanic), 
         p_diff_nhw_his = 2*pnorm(q=abs(diff_nhw_his), lower.tail=FALSE),
         # NHW vs Asian
         diff_nhw_asi = fzscore(b_NHW, b_Asian, se_NHW, se_Asian), 
         p_diff_nhw_asi = 2*pnorm(q=abs(diff_nhw_asi), lower.tail=FALSE),
    
         # Black vs Hispanic
         diff_bla_his = fzscore(b_Black, b_Hispanic, se_Black, se_Hispanic), 
         p_diff_bla_his = 2*pnorm(q=abs(diff_bla_his), lower.tail=FALSE),
         # Black vs Asian
         diff_bla_asi = fzscore(b_Black, b_Asian, se_Black, se_Asian), 
         p_diff_bla_asi = 2*pnorm(q=abs(diff_bla_asi), lower.tail=FALSE),
         
         # Hispanic vs Asian
         diff_his_asi = fzscore(b_Hispanic, b_Asian, se_Hispanic, se_Asian), 
         p_diff_his_asi = 2*pnorm(q=abs(diff_his_asi), lower.tail=FALSE)
  )

caide_diff_long <- full_join(
  caide_diff %>%
    select(term, outcome, starts_with('diff')) %>%
    pivot_longer(
      cols = starts_with('diff'),
      names_to = 'contrast', 
      values_to = 'z', 
      names_prefix = "diff_",
    ),
  
  caide_diff %>%
    select(term, outcome, starts_with('p_diff')) %>%
    pivot_longer(
      cols = starts_with('p_'),
      names_to = 'contrast', 
      values_to = 'p', 
      names_prefix = "p_diff_",
    )
) %>%
  separate(contrast, sep = "_", into = c("race1", "race2")) %>%
  mutate(
    stars = case_when(
      p > 0.05 ~ "", 
      between(p,  0.01, 0.05) ~ "*",
      between(p, 0.001, 0.01) ~ "**",
      p < 0.001 ~ "***"
    )
  )

caide_df_pval <- filter(caide_diff_long, p < 0.05) %>%
  rename(group1 = race1, group2 = race2) %>%
  mutate(y.position = case_when(
    group1 == "nhw" & group2 == "bla" ~ 0.9,
    group1 == "nhw" & group2 == "his" ~ 0.6,
    group1 == "nhw" & group2 == "asi" ~ 0,
    group1 == "bla" & group2 == "his" ~ 0,
    group1 == "bla" & group2 == "asi" ~ 0.3,
    group1 == "his" & group2 == "asi" ~ 0,
           ), 
    group1 = case_when(
           group1 == "nhw" ~ "NHW", 
           group1 == "bla" ~ "Black", 
           group1 == "asi" ~ "Asian", 
           group1 == "his" ~ "Hispanic"
         ), 
    group2 = case_when(
           group2 == "nhw" ~ "NHW", 
           group2 == "bla" ~ "Black", 
           group2 == "asi" ~ "Asian", 
           group2 == "his" ~ "Hispanic"
         ),
         race = NA, 
         reference = NA,
         term = fct_recode(term, "ε2+" = "e2+", "ε4+" = "e4+", "CAIDE" = "z_caide")

  )
```

#### export

```{r}
#| label: export_caide
#| code-summary: CAIDE Regression export

caide_res.df.out <- caide_res.df %>%
  select(race, outcome, predictor = term, estimate, std.error, statistic, p.value) %>%
  mutate(
    or = exp(estimate), 
    or = round(or, 2),
    lci = exp(estimate - std.error * 1.96), 
    lci = round(lci, 2),
    uci = exp(estimate + std.error * 1.96), 
    uci = round(uci, 2),
    estimate = round(estimate, digits = 2),
    std.error = round(std.error, digits = 3),
    statistic = round(statistic, digits = 2),
    stars = case_when(
      p.value > 0.05 ~ "", 
      between(p.value,  0.01, 0.05) ~ "*",
      between(p.value, 0.001, 0.01) ~ "**",
      p.value < 0.001 ~ "***"
    ), 
    p.value = case_when(
      p.value < 0.001 ~ format(p.value, scientific = TRUE, digits = 2),
      p.value >= 0.001 ~ as.character(round(p.value, 3))
    ), 
    predictor = str_replace(predictor, "ε", "e"),
    out = glue("OR [95% CI] = {or} [{lci}, {uci}], p = {p.value}")
    ) 

caide_res.df.out %>% filter(predictor == 'CAIDE' & outcome == "ADRD + MCI")
caide_res.df.out %>%
  write_csv(., "results/caide_res_all.csv")

caide_diff_long <- caide_diff_long %>%
  select(race, predictor, outcome, z, p, significant) %>%
  mutate(
    z = round(z, digits = 2),
    predictor = str_replace(predictor, "ε", "e")
  ) 

caide_diff_long_out %>%
  write_csv(., "results/caide_diff_res_all.csv")
```

```{r}
#| label: apoe_plots
#| code-summary: APOE genotype plots

theme.size = 8

effect_plot <- function(x){
  x %>%
    mutate(race = fct_relevel(race, 'Black', 'Hispanic', 'Asian',  'NHW'), 
        term = fct_recode(term, "ε2+" = "e2+", "ε4+" = "e4+", "CAIDE" = "z_caide", "mCAIDE" = "z_mcaide"),
        ) %>%
  ggplot(., aes(x = race, y = or, color = race)) + 
    facet_grid(cols = vars(term), rows = vars(outcome)) + 
    geom_hline(yintercept = 1, linetype = 2) + 
    geom_point() + 
    geom_linerange(aes(ymin = or_lci, ymax = or_hci), linewidth = 0.75) + 
    scale_y_continuous("Odds Ratio", trans = 'log', 
                       breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32), 
                       labels = c(0.25, 0.5, 1, 2, 4, 8, 16, 32)
    ) + 
    scale_color_manual(values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")) + 
    theme_bw() + 
    theme(
      text = element_text(size = theme.size),
      axis.text.x = element_text(angle = 315, vjust = 0.5, hjust=0), 
      axis.title.x = element_blank(),
      legend.position = "bottom", 
      strip.background = element_blank(), 
      strip.text = element_text(face = 'bold')
      )
  }

caide_e2_res_p <- filter(caide_res.df, term == "ε2+") %>% effect_plot(.) 
caide_e4_res_p <- filter(caide_res.df, term == "ε4+") %>% effect_plot(.) + 
  ggprism::add_pvalue(caide_df_pval %>% filter(term == "ε4+")
                      , bracket.nudge.y = 3, label = "{stars}", colour = 'black', tip.length = 0.01, bracket.size = 0.2) 

caide_res_p <- filter(caide_res.df, term == "CAIDE") %>% effect_plot(.) + 
  ggprism::add_pvalue(caide_df_pval %>% filter(term == "CAIDE")
                      , bracket.nudge.y = 3, label = "{stars}", colour = 'black', tip.length = 0.01, bracket.size = 0.2) 


caide_res_p
caide_e4_res_p
caide_e2_res_p

ggsave("results/figures/joint_apoe_race_all_bl.png", plot = apoe_geno_res_p, width = 9, height = 5, units = 'in')

```

```{r}
#| label: apoe_plots
#| code-summary: APOE genotype plots

joint_caid_apoe_all_bl_p <- ggplot(caide_res, aes(x = or, y = race, color = race)) + 
    facet_grid(cols = vars(term), rows = vars(outcome), scales = 'free', labeller = label_wrap_gen(width = 7)) + 
    geom_vline(xintercept = 1, linetype = 2) + 
    geom_point() + 
    geom_linerange(aes(xmin = or_lci, xmax = or_hci), linewidth = 0.75) + 
    scale_y_discrete(limits=rev) +  
    scale_color_manual(
      labels = c("Black", "Latinx", "Asian", "NHW"),
      values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")) + 
    theme_bw() + 
    labs(x = "Odds Ratio") + 
    theme(
      text = element_text(size = 14),
      axis.title.y = element_blank(),
      legend.position = "bottom", 
      strip.background = element_blank(), 
      strip.text = element_text(face = 'bold'), 
      legend.title=element_blank()
      )

ggsave("results/figures/joint_caid_apoe_all_bl.png", plot = joint_caid_apoe_all_bl_p, width = 9, height = 4, units = 'in')

```

```{r}
#| label: adard_mci_apoe_plots
#| code-summary: ADRD+MCI Main effect plots

theme.size = 8

joint_caid_apoe_adrd_mci_bl_p <- ggplot(caide_res.df %>% filter(outcome == "ADRD + MCI"), aes(x = or, y = race, color = race)) + 
    facet_grid(cols = vars(term), rows = vars(outcome), scales = 'free') + 
    geom_vline(xintercept = 1, linetype = 2) + 
    geom_point() + 
    geom_linerange(aes(xmin = or_lci, xmax = or_hci), linewidth = 0.75) + 
    # scale_x_continuous("Odds Ratio", trans = 'log', 
    #                    breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32), 
    #                    labels = c(0.25, 0.5, 1, 2, 4, 8, 16, 32)
    # ) + 
    scale_y_discrete(limits=rev) +  
    scale_color_manual(
      labels = c("Black", "Latinx", "Asian", "NHW"),
      values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")) + 
    theme_bw() + 
    labs(x = "Odds Ratio") + 
    theme(
      text = element_text(size = 14),
      axis.title.y = element_blank(),
      legend.position = "bottom", 
      strip.background = element_blank(), 
      strip.text = element_text(face = 'bold')
      )

ggsave("results/figures/joint_caid_apoe_adrd_mci_bl.png", plot = joint_caid_apoe_adrd_mci_bl_p, width = 9, height = 3.5, units = 'in')

```

#### Interaction

```{r}

glm(dx ~ race + caide_apoe + cohort, data = dat, family = 'binomial') %>% 
  tidy()

glm(dx_lv ~ race + caide_apoe, data = dat, family = 'binomial') %>% 
  tidy()

lm(ad_age_lv ~ race + caide_apoe, data = dat) %>% 
  tidy()
```

# Regression Models

```{r}
#| label: regression_models
#| code-summary: Regression Models

add_me <- tibble(
    outcome = c("AD", "AD + MCI", "ADRD", "ADRD + MCI"),
    race = c('Black', 'Hispanic', 'Asian',  'NHW'),
  ) %>% 
    expand(outcome, race) %>%
    mutate(
      estimate = 0, 
      term = "mid_e3/e3"
    )

caide_apoe_cat_mod_fit <- function(data){
  glm(dx ~ caide_apoe + cohort, data = data, family = 'binomial')
}

caide_apoe_cat_res <- bind_rows(
  dat %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD + MCI",
      res = map(data, caide_apoe_cat_mod_fit), 
    ) %>%
    select(-data), 

  dat %>%
    filter(naccudsd %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD",
      res = map(data, caide_apoe_cat_mod_fit), 
    ) %>%
    select(-data), 
  
  dat %>%
    filter(naccetpr %in% c(1, 88)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD + MCI",
      res = map(data, caide_apoe_cat_mod_fit), 
    ) %>%
    select(-data), 

  dat %>%
    filter(naccetpr %in% c(1, 88)) %>%
    filter(naccudsd %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD",
      res = map(data, caide_apoe_cat_mod_fit), 
    ) %>%
    select(-data), 
) %>%
  mutate(
    fit = map(res, glance),
    df = map(res, tidy), 
  )

caide_apoe_cat_df <- caide_apoe_cat_res %>%
  select(race, outcome, df) %>%
  unnest(cols = df) %>%
  ungroup() %>%
  filter(str_detect(term, 'caide_apoe'))  %>%
  bind_rows(add_me) %>%
  mutate(
    lci = estimate - (std.error * 1.96),
    hci = estimate + (std.error * 1.96), 
    or = exp(estimate),
    or = exp(estimate),
    or_lci = exp(lci),
    or_hci = exp(hci),
    term = str_replace(term, "caide_apoe", ""), 
    term = fct_relevel(term, 
                       "high_e4+", "mid_e4+", "low_e4+", 
                       "high_e3/e3", "mid_e3/e3",  "low_e3/e3", 
                        "high_e2+", "mid_e2+", "low_e2+",
                       ),
    term = fct_recode(term, 
                     "Unfavourable, e4+" = "high_e4+", "Intermediate, e4+" = "mid_e4+", "Favourable, e4+" = "low_e4+", 
                     "Unfavourable, e3/e3" = "high_e3/e3", "Intermediate, e3/e3 (reference)" = "mid_e3/e3", "Favourable, e3/e3" = "low_e3/e3", 
                     "Unfavourable, e2+" = "high_e2+", "Intermediate, e2+" = "mid_e2+", "Favourable, e2+" = "low_e2+" 
                      ),
    reference = ifelse(or == 1, TRUE, FALSE), 
    race = fct_relevel(race, "Black", "Hispanic", "Asian", "NHW"), 
    race = fct_recode(race, "Latinx" = "Hispanic")
  ) 

```

```{r}
caide_apoe_cat_df.out <- caide_apoe_cat_df %>% 
  mutate_at(vars(estimate, std.error, statistic, lci, hci, or, or_lci, or_hci), round, 2) %>%
  mutate(
    p = format.pval(p.value, digits = 2, eps = 1e-100),
    out = glue("OR [95% CI] = {or} [{or_lci}, {or_hci}], p = {p}")
  ) 

write_csv(caide_apoe_cat_df.out, "results/caide_apoe_cat_res.csv")

caide_apoe_cat_df.out %>% filter(outcome == "ADRD + MCI") %>% select(race, outcome, term, out) %>% print(n = Inf)

```

```{r}
#| label: apoe_plots
#| code-summary: APOE genotype plots

theme.size = 8

joint_caide_apoe_cat_all_bl <- ggplot(caide_apoe_cat_df, aes(x = or, y = term, color = race, shape = reference)) + 
  facet_grid(cols = vars(race), rows = vars(outcome), scales = "free_x", labeller = label_wrap_gen(width = 7)) + 
  geom_vline(xintercept = 1, linetype = 2) + 
  geom_point() + 
  geom_linerange(aes(xmin = or_lci, xmax = or_hci), linewidth = 0.75) + 
  scale_x_continuous("Odds Ratio", trans = 'log', 
                     breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32),
                     labels = c(0.25, 0.5, 1, 2, 4, 8, 16, 32),
                       limits = c(0.15, 9), 
                       oob=scales::rescale_none
                       ) + 
  scale_color_manual(values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")) + 
  scale_shape_manual(values = c(16, 15), guide = 'none') + 
  theme_bw() + 
  theme(
    text = element_text(size = theme.size),
    axis.title.y = element_blank(),
    legend.position = "bottom", 
    strip.background = element_blank(), 
    strip.text = element_text(face = 'bold'), 
    legend.title = element_blank()
    )

joint_caide_apoe_cat_all_bl 

ggsave("results/figures/joint_caide_apoe_cat_all_bl.png", plot = joint_caide_apoe_cat_all_bl, width = 9, height = 4, units = 'in')

```

```{r}
#| label: caide_apoe_adrd_mci_bl_presentation
#| code-summary: CAIDE * APOE ADRD + MCI plots

theme.size = 14

joint_caide_apoe_adrd_mci_bl_p <- caide_apoe_cat_df %>%
  filter(outcome == "ADRD + MCI") %>% 
  ggplot(., aes(x = or, y = term, color = race, shape = reference)) + 
    facet_grid(cols = vars(race), rows = vars(outcome), scales = "free_x") + 
    geom_vline(xintercept = 1, linetype = 2) + 
    geom_point() + 
    geom_linerange(aes(xmin = or_lci, xmax = or_hci), linewidth = 0.75) + 
    scale_x_continuous("Odds Ratio", trans = 'log',
                       breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32),
                       labels = c(0.25, 0.5, 1, 2, 4, 8, 16, 32), 
                       limits = c(0.15, 9), 
                       oob=scales::rescale_none
    ) +
    scale_color_manual(
      values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")
      ) + 
    scale_shape_manual(values = c(16, 15), guide = 'none') + 
    theme_bw() + 
    theme(
      text = element_text(size = theme.size),
      axis.title.y = element_blank(),
      axis.text.x = element_text(size = 10),
      legend.position = "bottom", 
      strip.background = element_blank(), 
      strip.text = element_text(face = 'bold')
      )


ggsave("results/figures/joint_caide_apoe_adrd_mci_bl.png", plot = joint_caide_apoe_adrd_mci_bl_p, width = 9, height = 3.5, units = 'in')

```

#### Sex stratified

```{r}

## Males
caide_all_male_res <- glm(dx ~ race + apoe + z_caide_nosex + race + cohort, family = 'binomial', 
    data = dat %>% filter(gender == "Male")) %>% 
  tidy() %>%
  mutate(
    model = "Male",
    or = exp(estimate), 
    or = round(or, 2),
    lci = exp(estimate - std.error * 1.96), 
    lci = round(lci, 2),
    uci = exp(estimate + std.error * 1.96), 
    uci = round(uci, 2),
    p = format.pval(p.value, digits = 2, eps = 1e-100), 
    out = glue("OR [95% CI] = {or} [{lci}, {uci}], p = {p}")
  )

## Females
caide_all_female_res <- glm(dx ~ race + apoe + z_caide_nosex + race + cohort, family = 'binomial', 
    data = dat %>% filter(gender == "Female")) %>% 
  tidy() %>%
  mutate(
    model = "Female",
    or = exp(estimate), 
    or = round(or, 2),
    lci = exp(estimate - std.error * 1.96), 
    lci = round(lci, 2),
    uci = exp(estimate + std.error * 1.96), 
    uci = round(uci, 2),
    p = format.pval(p.value, digits = 2, eps = 1e-100), 
    out = glue("OR [95% CI] = {or} [{lci}, {uci}], p = {p}")
  )

caide_all_sex_diff <- left_join(
  select(caide_all_male_res, term, estimate, std.error, p.value), 
  select(caide_all_female_res, term, estimate, std.error, p.value), 
  by = 'term', 
  suffix = c(".m", ".f")
) %>%
  # filter(str_detect(term, 'apoe|caide')) %>%
  mutate(
    diff = fzscore(estimate.m, estimate.f, std.error.m, std.error.f), 
    diff.p = 2*pnorm(q=abs(diff), lower.tail=FALSE)
  )

bind_rows(
  caide_all_male_res, caide_all_female_res
) %>%
  mutate(
    estimate = round(estimate, 2), 
    std.error = round(std.error, 2), 
    statistic = round(statistic, 2), 
    p.value = format.pval(p.value, digits = 2, eps = 1e-100)
  ) %>%
  write_csv(., "results/caide_all_sex.csv")

caide_all_sex_diff %>%
  mutate(
    diff = round(diff, 2), 
    diff.p = format.pval(diff.p, digits = 2, eps = 1e-100)
  ) %>%
  write_csv(., "results/caide_all_diff_sex.csv")

```

```{r}
caide_sex_mod_fit <- function(data){
  # glm(dx ~ apoe_geno + SEX + aoo, data = data, family = 'binomial')
  glm(dx ~ apoe + z_caide_nosex + cohort, data = data, family = 'binomial')
}

caide_sex_res <- bind_rows(
  dat %>%
    filter(gender == "Male") %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "Males",
      res = map(data, caide_sex_mod_fit), 
    ), 
  
  dat %>%
    filter(gender == "Female") %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "Females",
      res = map(data, caide_sex_mod_fit), 
    ), 
  
) %>%
  mutate(
    fit = map(res, glance),
    df = map(res, tidy),
    pred = map2(res, data, predict, type = 'response'), 
  ) %>%
  select(-data)

caide_sex_res.df <- caide_sex_res %>%
  select(race, outcome, df) %>%
  unnest(cols = df) %>%
  ungroup() %>%
  filter(str_detect(term, 'apoe|caide')) %>%
  mutate(
    lci = estimate - (std.error * 1.96),
    hci = estimate + (std.error * 1.96), 
    or = exp(estimate),
    or_lci = exp(lci),
    or_hci = exp(hci),
    term = str_replace(term, "apoe", ""), 
    term = fct_relevel(term, 'e2+', 'e4+', 'z_caide_nosex'),    
    race = fct_relevel(race, "Black", "Hispanic", "Asian", "NHW"), 
    term = fct_recode(term, "ε2+" = "e2+", "ε4+" = "e4+", "CAIDE" = "z_caide_nosex")
  )

caide_sex_res.df %>% filter(term == "CAIDE")
```

```{r}
#| label: export_caide
#| code-summary: CAIDE Regression export

caide_sex_res.df.out <- caide_sex_res.df %>%
  select(race, outcome, predictor = term, estimate, std.error, statistic, p.value) %>%
  mutate(
    or = exp(estimate), 
    or = round(or, 2),
    lci = exp(estimate - std.error * 1.96), 
    lci = round(lci, 2),
    uci = exp(estimate + std.error * 1.96), 
    uci = round(uci, 2),
    estimate = round(estimate, digits = 2),
    std.error = round(std.error, digits = 3),
    statistic = round(statistic, digits = 2),
    stars = case_when(
      p.value > 0.05 ~ "", 
      between(p.value,  0.01, 0.05) ~ "*",
      between(p.value, 0.001, 0.01) ~ "**",
      p.value < 0.001 ~ "***"
    ), 
    p.value = case_when(
      p.value < 0.001 ~ format(p.value, scientific = TRUE, digits = 2),
      p.value >= 0.001 ~ as.character(round(p.value, 3))
    ), 
    predictor = str_replace(predictor, "ε", "e"),
    out = glue("OR [95% CI] = {or} [{lci}, {uci}], p = {p.value}")
    ) 

caide_sex_res.df.out %>%
  write_csv(., "results/caide_res_sex.csv")

```

```{r}
ggplot(caide_sex_res.df, aes(x = or, y = race, color = race)) + 
  facet_grid(cols = vars(term), rows = vars(outcome)) + 
  geom_vline(xintercept = 1, linetype = 2) + 
  geom_point() + 
  geom_linerange(aes(xmin = or_lci, xmax = or_hci), linewidth = 0.75) + 
  scale_x_continuous("Odds Ratio", trans = 'log', 
                     breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32), 
                     labels = c(0.25, 0.5, 1, 2, 4, 8, 16, 32)
  ) + 
  scale_color_manual(values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")) + 
  theme_bw() + 
  theme(
    text = element_text(size = theme.size),
    axis.text.x = element_text(angle = 315, vjust = 0.5, hjust=0), 
    axis.title.x = element_blank(),
    legend.position = "bottom", 
    strip.background = element_blank(), 
    strip.text = element_text(face = 'bold')
  )

```

### mCAIDE

```{r}
glm(dx ~ race + apoe + z_mcaide + cohort, data = dat, family = 'binomial') %>% 
  tidy() %>%
  mutate(
    or = exp(estimate), 
    or = round(or, 2),
    lci = exp(estimate - std.error * 1.96), 
    lci = round(lci, 2),
    uci = exp(estimate + std.error * 1.96), 
    uci = round(uci, 2),
    p = format.pval(p.value, digits = 2, eps = 1e-100), 
    out = glue("OR [95% CI] = {or} [{lci}, {uci}], p = {p}")
  )


glm(dx_lv ~ race + apoe + z_mcaide, data = dat, family = 'binomial') %>% 
  tidy()

lm(ad_age_lv ~ race + apoe + z_mcaide, data = dat) %>% 
  tidy()

```

added actual values
```{r}
#| label: regression_models
#| code-summary: Regression Models

mcaide_mod_fit <- function(data){
  glm(dx ~ apoe + z_mcaide + cohort, data = data, family = 'binomial')
}

mcaide_res <- bind_rows(
  dat %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD + MCI",
      res = map(data, mcaide_mod_fit),
      #actual_vals = map(data, ~.x$dx)
    ), 

  dat %>%
    filter(naccudsd %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD",
      res = map(data, mcaide_mod_fit), 
      #actual_vals = map(data, ~.x$dx)
    ), 
  
  dat %>%
    filter(naccetpr %in% c(1, 88)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD + MCI",
      res = map(data, mcaide_mod_fit), 
      #actual_vals = map(data, ~.x$dx)
    ),
  dat %>%
    filter(naccetpr %in% c(1, 88)) %>%
    filter(naccudsd %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD",
      res = map(data, mcaide_mod_fit), 
      #actual_vals = map(data, ~.x$dx)
    ), 
) %>%
  mutate(
    fit = map(res, glance),
    df = map(res, tidy), 
    pred = map2(res, data, predict, type = 'response'),
    actual_vals = map(data, ~.x$dx),
    auc_value = map2_dbl(actual_vals, pred, ~ auc(roc(.x, .y)))
  ) %>% 
  select(-data)

mcaide_res_df <- mcaide_res %>%
  select(race, outcome, df,auc_value) %>%
  unnest(cols = df) %>%
  ungroup() %>%
  filter(str_detect(term, 'apoe|mcaide')) %>%
  mutate(
    lci = estimate - (std.error * 1.96),
    hci = estimate + (std.error * 1.96), 
    or = exp(estimate),
    or_lci = exp(lci),
    or_hci = exp(hci),
    term = str_replace(term, "apoe", ""), 
    term = fct_relevel(term, 'e2+', 'e4+', 'z_mcaide'),    
    race = fct_relevel(race, "Black", "Hispanic", "Asian", "NHW"), 
    term = fct_recode(term, "ε2+" = "e2+", "ε4+" = "e4+", "mCAIDE" = "z_mcaide")
  )

mcaide_res_df %>% select(race, outcome,auc_value) %>% 
  group_by(race, outcome) %>% 
  mutate(auc_value = round(auc_value,2)) %>% distinct()

```


# AUC values
get auc values
compare redcuced to full  reduced take out zmcaide 
AUC cohort 
AUC cohort apoe
AUC cohort mcaide apoe


```{r}
#| label: apoe_difference
#| code-summary: APOE genotype differences

mcaide_diff <- mcaide_res_df %>%
  select(race, outcome, term, b = estimate, se = std.error, p = p.value ) %>%
  pivot_wider(names_from = race, values_from = c(b, se, p)) %>%
  mutate(.,
         ## Black vs NHW
         diff_nhw_bla = fzscore(b_NHW, b_Black, se_NHW, se_Black),
         p_diff_nhw_bla = 2*pnorm(q=abs(diff_nhw_bla), lower.tail=FALSE),
         # NHW vs Hispanic
         diff_nhw_his = fzscore(b_NHW, b_Hispanic, se_NHW, se_Hispanic), 
         p_diff_nhw_his = 2*pnorm(q=abs(diff_nhw_his), lower.tail=FALSE),
         # NHW vs Asian
         diff_nhw_asi = fzscore(b_NHW, b_Asian, se_NHW, se_Asian), 
         p_diff_nhw_asi = 2*pnorm(q=abs(diff_nhw_asi), lower.tail=FALSE),
    
         # Black vs Hispanic
         diff_bla_his = fzscore(b_Black, b_Hispanic, se_Black, se_Hispanic), 
         p_diff_bla_his = 2*pnorm(q=abs(diff_bla_his), lower.tail=FALSE),
         # Black vs Asian
         diff_bla_asi = fzscore(b_Black, b_Asian, se_Black, se_Asian), 
         p_diff_bla_asi = 2*pnorm(q=abs(diff_bla_asi), lower.tail=FALSE),
         
         # Hispanic vs Asian
         diff_his_asi = fzscore(b_Hispanic, b_Asian, se_Hispanic, se_Asian), 
         p_diff_his_asi = 2*pnorm(q=abs(diff_his_asi), lower.tail=FALSE)
  )

mcaide_diff_long <- full_join(
  mcaide_diff %>%
    select(term, outcome, starts_with('diff')) %>%
    pivot_longer(
      cols = starts_with('diff'),
      names_to = 'contrast', 
      values_to = 'z', 
      names_prefix = "diff_",
    ),
  
  mcaide_diff %>%
    select(term, outcome, starts_with('p_diff')) %>%
    pivot_longer(
      cols = starts_with('p_'),
      names_to = 'contrast', 
      values_to = 'p', 
      names_prefix = "p_diff_",
    )
) %>%
  separate(contrast, sep = "_", into = c("race1", "race2")) %>%
  mutate(
    stars = case_when(
      p > 0.05 ~ "", 
      between(p,  0.01, 0.05) ~ "*",
      between(p, 0.001, 0.01) ~ "**",
      p < 0.001 ~ "***"
    )
  )

mcaide_df_pval <- filter(mcaide_diff_long, p < 0.05) %>%
  rename(group1 = race1, group2 = race2) %>%
  mutate(y.position = case_when(
    group1 == "nhw" & group2 == "bla" ~ 0.9,
    group1 == "nhw" & group2 == "his" ~ 0.6,
    group1 == "nhw" & group2 == "asi" ~ 0,
    group1 == "bla" & group2 == "his" ~ 0,
    group1 == "bla" & group2 == "asi" ~ 0.3,
    group1 == "his" & group2 == "asi" ~ 0,
           ), 
    group1 = case_when(
           group1 == "nhw" ~ "NHW", 
           group1 == "bla" ~ "Black", 
           group1 == "asi" ~ "Asian", 
           group1 == "his" ~ "Hispanic"
         ), 
         group2 = case_when(
           group2 == "nhw" ~ "NHW", 
           group2 == "bla" ~ "Black", 
           group2 == "asi" ~ "Asian", 
           group2 == "his" ~ "Hispanic"
         ),
         race = NA, 
         reference = NA,
          term = fct_recode(term, "ε2+" = "e2+", "ε4+" = "e4+", "mCAIDE" = "z_mcaide"),

  )
```

```{r}
#| label: export_caide
#| code-summary: CAIDE Regression export

mcaide_res_df.out <- mcaide_res_df %>%
  select(race, outcome, predictor = term, estimate, std.error, statistic, p.value) %>%
  mutate(
    or = exp(estimate), 
    or = round(or, 2),
    lci = exp(estimate - std.error * 1.96), 
    lci = round(lci, 2),
    uci = exp(estimate + std.error * 1.96), 
    uci = round(uci, 2),
    estimate = round(estimate, digits = 2),
    std.error = round(std.error, digits = 3),
    statistic = round(statistic, digits = 2),
    stars = case_when(
      p.value > 0.05 ~ "", 
      between(p.value,  0.01, 0.05) ~ "*",
      between(p.value, 0.001, 0.01) ~ "**",
      p.value < 0.001 ~ "***"
    ), 
    p.value = case_when(
      p.value < 0.001 ~ format(p.value, scientific = TRUE, digits = 2),
      p.value >= 0.001 ~ as.character(round(p.value, 3))
    ), 
    predictor = str_replace(predictor, "ε", "e"),
    out = glue("OR [95% CI] = {or} [{lci}, {uci}], p = {p.value}")
    ) 

mcaide_res_df.out %>% filter(predictor == 'mCAIDE' & outcome == "ADRD + MCI")

write_csv(mcaide_res_df.out, "results/mcaide_res_all.csv")


mcaide_diff_long.out <- mcaide_diff_long %>%
  select(race1, race2, predictor = term, outcome, z, p, significant = stars) %>%
  mutate(
         race1 = case_when(
           race1 == "nhw" ~ "NHW", 
           race1 == "bla" ~ "Black", 
           race1 == "asi" ~ "Asian", 
           race1 == "his" ~ "Hispanic"
         ), 
         race2 = case_when(
           race2 == "nhw" ~ "NHW", 
           race2 == "bla" ~ "Black", 
           race2 == "asi" ~ "Asian", 
           race2 == "his" ~ "Hispanic"
         ),
    z = round(z, digits = 2),
    p = case_when(
       p < 0.001 ~ format(p, scientific = TRUE, digits = 2),
       p >= 0.001 ~ as.character(round(p, 3))
    ), 
    predictor = str_replace(predictor, "ε", "e")
  ) %>% 
  unite(race, c(race1, race2), sep = "-") 

mcaide_diff_long.out %>% filter(predictor == 'mCAIDE' & outcome == "ADRD + MCI")

mcaide_diff_long %>%
  write_csv(., "results/mcaide_diff_res_all.csv")
```

```{r}
#| label: apoe_plots
#| code-summary: APOE genotype plots

mcaide_e2_res_p <- filter(mcaide_res_df, term == "e2+") %>% effect_plot(.) 
mcaide_e4_res_p <- filter(mcaide_res_df, term == "e4+") %>% effect_plot(.) + 
  ggprism::add_pvalue(caide_df_pval %>% filter(term == "ε4+")
                      , bracket.nudge.y = 3, label = "{stars}", colour = 'black', tip.length = 0.01, bracket.size = 0.2) 

mcaide_res_p <- filter(mcaide_res_df, term == "z_mcaide") %>% effect_plot(.) + 
  ggprism::add_pvalue(mcaide_df_pval %>% filter(term == "mCAIDE")
                      , bracket.nudge.y = 3, label = "{stars}", colour = 'black', tip.length = 0.01, bracket.size = 0.2) 


mcaide_res_p
caide_e4_res_p

ggsave("results/figures/nacc_apoe_race_all_bl.png", plot = apoe_geno_res_p, width = 9, height = 5, units = 'in')

```

```{r}
#| label: adard_mci_apoe_plots
#| code-summary: ADRD+MCI Main effect plots

theme.size = 8

joint_mcaid_apoe_adrd_mci_bl_p <- ggplot(mcaide_res_df %>% filter(outcome == "ADRD + MCI"), aes(x = or, y = race, color = race)) + 
    facet_grid(cols = vars(term), rows = vars(outcome), scales = 'free') + 
    geom_vline(xintercept = 1, linetype = 2) + 
    geom_point() + 
    geom_linerange(aes(xmin = or_lci, xmax = or_hci), linewidth = 0.75) + 
    # scale_x_continuous("Odds Ratio", trans = 'log', 
    #                    breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32), 
    #                    labels = c(0.25, 0.5, 1, 2, 4, 8, 16, 32)
    # ) + 
    scale_y_discrete(limits=rev) +  
    scale_color_manual(
      labels = c("Black", "Latinx", "Asian", "NHW"),
      values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")) + 
    theme_bw() + 
    labs(x = "Odds Ratio") + 
    theme(
      text = element_text(size = 14),
      axis.title.y = element_blank(),
      legend.position = "bottom", 
      strip.background = element_blank(), 
      strip.text = element_text(face = 'bold')
      )

ggsave("results/figures/joint_mcaid_apoe_adrd_mci_bl.png", plot = joint_mcaid_apoe_adrd_mci_bl_p, width = 9, height = 3.5, units = 'in')

```

#### Interaction

```{r}

glm(dx ~ race + mcaide_apoe + cohort, data = dat, family = 'binomial') %>% 
  tidy()

glm(dx_lv ~ race + mcaide_apoe, data = dat, family = 'binomial') %>% 
  tidy()

lm(sdx_lv ~ race + mcaide_apoe, data = dat) %>% 
  tidy()


```

```{r}
#| label: regression_models
#| code-summary: Regression Models

add_me <- tibble(
    outcome = c("AD", "AD + MCI", "ADRD", "ADRD + MCI"),
    race = c('Black', 'Hispanic', 'Asian',  'NHW'),
  ) %>% 
    expand(outcome, race) %>%
    mutate(
      estimate = 0, 
      term = "mid_e3/e3"
    )

mcaide_apoe_cat_mod_fit <- function(data){
  glm(dx ~ mcaide_apoe + cohort, data = data, family = 'binomial')
}

mcaide_apoe_cat_res <- bind_rows(
  dat %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD + MCI",
      res = map(data, mcaide_apoe_cat_mod_fit), 
    ) %>%
    select(-data), 

  dat %>%
    filter(naccudsd %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD",
      res = map(data, mcaide_apoe_cat_mod_fit), 
    ) %>%
    select(-data), 
  
  dat %>%
    filter(naccetpr %in% c(1, 88)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD + MCI",
      res = map(data, mcaide_apoe_cat_mod_fit), 
    ) %>%
    select(-data), 

  dat %>%
    filter(naccetpr %in% c(1, 88)) %>%
    filter(naccudsd %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD",
      res = map(data, mcaide_apoe_cat_mod_fit), 
    ) %>%
    select(-data), 
) %>%
  mutate(
    fit = map(res, glance),
    df = map(res, tidy), 
  )

mcaide_apoe_cat_df <- mcaide_apoe_cat_res %>%
  select(race, outcome, df) %>%
  unnest(cols = df) %>%
  ungroup() %>%
  filter(str_detect(term, 'mcaide_apoe'))  %>%
  bind_rows(add_me) %>%
  mutate(
    lci = estimate - (std.error * 1.96),
    hci = estimate + (std.error * 1.96), 
    or = exp(estimate),
    or_lci = exp(lci),
    or_hci = exp(hci),
    term = str_replace(term, "mcaide_apoe", ""), 
    term = fct_relevel(term, 
                       "high_e4+", "mid_e4+", "low_e4+", 
                       "high_e3/e3", "mid_e3/e3",  "low_e3/e3", 
                        "high_e2+", "mid_e2+", "low_e2+",
                       ),    
        term = fct_recode(term, 
                     "Unfavourable, e4+" = "high_e4+", "Intermediate, e4+" = "mid_e4+", "Favourable, e4+" = "low_e4+", 
                     "Unfavourable, e3/e3" = "high_e3/e3", "Intermediate, e3/e3 (reference)" = "mid_e3/e3", "Favourable, e3/e3" = "low_e3/e3", 
                     "Unfavourable, e2+" = "high_e2+", "Intermediate, e2+" = "mid_e2+", "Favourable, e2+" = "low_e2+" 
                      ),
    reference = ifelse(or == 1, TRUE, FALSE), 
    race = fct_relevel(race, "Black", "Hispanic", "Asian", "NHW"), 
    race = fct_recode(race, "Latinx" = "Hispanic"), 

  ) 

group_split(mcaide_apoe_cat_df, outcome) %>% map(., print, n = Inf)

```

```{r}
mcaide_apoe_cat_df.out <- mcaide_apoe_cat_df %>% 
  mutate_at(vars(estimate, std.error, statistic, lci, hci, or, or_lci, or_hci), round, 2) %>%
  mutate(
    p = format.pval(p.value, digits = 2, eps = 1e-100),
    out = glue("OR [95% CI] = {or} [{or_lci}, {or_hci}], p = {p}")
  ) 

write_csv(mcaide_apoe_cat_df.out, "results/mcaide_apoe_cat_res.csv")

```

```{r}
#| label: apoe_plots
#| code-summary: APOE genotype plots

theme.size = 8

ggplot(mcaide_apoe_cat_df, aes(x = or, y = term, color = race)) + 
  facet_grid(cols = vars(race), rows = vars(outcome), scales = "free_x") + 
  geom_vline(xintercept = 1, linetype = 2) + 
  geom_point() + 
  geom_linerange(aes(xmin = or_lci, xmax = or_hci), linewidth = 0.75) + 
  scale_x_continuous("Odds Ratio", trans = 'log', 
                     # breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32), 
                     # labels = c(0.25, 0.5, 1, 2, 4, 8, 16, 32)
  ) + 
  scale_color_manual(values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")) + 
  theme_bw() + 
  theme(
    text = element_text(size = theme.size),
    axis.title.y = element_blank(),
    legend.position = "bottom", 
    strip.background = element_blank(), 
    strip.text = element_text(face = 'bold')
    )


ggsave("results/figures/joint_apoe_mcaide_race_all_bl.png", width = 9, height = 5, units = 'in')

```

```{r}
#| label: caide_apoe_adrd_mci_bl_presentation
#| code-summary: CAIDE * APOE ADRD + MCI plots

theme.size = 14

mcaide_apoe_adrd_mci_bl_p <- mcaide_apoe_cat_df %>%
  filter(outcome == "ADRD + MCI") %>% 
  ggplot(., aes(x = or, y = term, color = race, shape = reference)) + 
    facet_grid(cols = vars(race), rows = vars(outcome), scales = "free_x") + 
    geom_vline(xintercept = 1, linetype = 2) + 
    geom_point() + 
    geom_linerange(aes(xmin = or_lci, xmax = or_hci), linewidth = 0.75) + 
    scale_x_continuous("Odds Ratio", trans = 'log',
                       breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32),
                       labels = c(0.25, 0.5, 1, 2, 4, 8, 16, 32), 
                       limits = c(0.1, 9),
                       oob=scales::rescale_none
    ) +
    scale_color_manual(
      values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")
      ) + 
    scale_shape_manual(values = c(16, 15), guide = 'none') + 
    theme_bw() + 
    theme(
      text = element_text(size = theme.size),
      axis.title.y = element_blank(),
      axis.text.x = element_text(size = 10),
      legend.position = "bottom", 
      strip.background = element_blank(), 
      strip.text = element_text(face = 'bold')
      )


ggsave("results/figures/mcaide_apoe_adrd_mci_bl.png", plot = mcaide_apoe_adrd_mci_bl_p, width = 9, height = 3.5, units = 'in')

```

#### Sex stratified

```{r}

## Males
mcaide_all_male_res <- glm(dx ~ race + apoe + z_mcaide_nosex + race + cohort, family = 'binomial', 
    data = dat %>% filter(gender == "Male")) %>% 
  tidy() %>%
  mutate(
    model = "Male",
    or = exp(estimate), 
    or = round(or, 2),
    lci = exp(estimate - std.error * 1.96), 
    lci = round(lci, 2),
    uci = exp(estimate + std.error * 1.96), 
    uci = round(uci, 2),
    p = format.pval(p.value, digits = 2, eps = 1e-100), 
    out = glue("OR [95% CI] = {or} [{lci}, {uci}], p = {p}")
  )

## Females
mcaide_all_female_res <- glm(dx ~ race + apoe + z_mcaide_nosex + race + cohort, family = 'binomial', 
    data = dat %>% filter(gender == "Female")) %>% 
  tidy() %>%
  mutate(
    model = "Female",
    or = exp(estimate), 
    or = round(or, 2),
    lci = exp(estimate - std.error * 1.96), 
    lci = round(lci, 2),
    uci = exp(estimate + std.error * 1.96), 
    uci = round(uci, 2),
    p = format.pval(p.value, digits = 2, eps = 1e-100), 
    out = glue("OR [95% CI] = {or} [{lci}, {uci}], p = {p}")
  )

mcaide_all_sex_diff <- left_join(
  select(mcaide_all_male_res, term, estimate, std.error, p.value), 
  select(mcaide_all_female_res, term, estimate, std.error, p.value), 
  by = 'term', 
  suffix = c(".m", ".f")
) %>%
  # filter(str_detect(term, 'apoe|caide')) %>%
  mutate(
    diff = fzscore(estimate.m, estimate.f, std.error.m, std.error.f), 
    diff.p = 2*pnorm(q=abs(diff), lower.tail=FALSE)
  )

bind_rows(
  mcaide_all_male_res, mcaide_all_female_res
) %>%
  mutate(
    estimate = round(estimate, 2), 
    std.error = round(std.error, 2), 
    statistic = round(statistic, 2), 
    p.value = format.pval(p.value, digits = 2, eps = 1e-100)
  ) %>%
  write_csv(., "results/mcaide_all_sex.csv")

mcaide_all_sex_diff %>%
  mutate(
    diff = round(diff, 2), 
    diff.p = format.pval(diff.p, digits = 2, eps = 1e-100)
  ) %>%
  write_csv(., "results/mcaide_all_diff_sex.csv")


```

```{r}
mcaide_sex_mod_fit <- function(data){
  # glm(dx ~ apoe_geno + SEX + aoo, data = data, family = 'binomial')
  glm(dx ~ apoe + z_mcaide_nosex + cohort, data = data, family = 'binomial')
}

mcaide_sex_res <- bind_rows(
  dat %>%
    group_by(race) %>%
    filter(gender == "Male") %>%
    nest() %>%
    mutate(
      outcome = "Males",
      res = map(data, mcaide_sex_mod_fit), 
    ), 
  
  dat %>%
    group_by(race) %>%
    filter(gender == "Female") %>%
    nest() %>%
    mutate(
      outcome = "Females",
      res = map(data, mcaide_sex_mod_fit), 
    ), 

) %>%
  mutate(
    fit = map(res, glance),
    df = map(res, tidy), 
    pred = map2(res, data, predict, type = 'response'), 
  ) %>% 
  select(-data)

mcaide_sex_res_df <- mcaide_sex_res %>%
  select(race, outcome, df) %>%
  unnest(cols = df) %>%
  ungroup() %>%
  filter(str_detect(term, 'apoe|mcaide')) %>%
  mutate(
    lci = estimate - (std.error * 1.96),
    hci = estimate + (std.error * 1.96), 
    or = exp(estimate),
    or_lci = exp(lci),
    or_hci = exp(hci),
    term = str_replace(term, "apoe", ""), 
    term = fct_relevel(term, 'e2+', 'e4+', 'z_mcaide_nosex'),    
    race = fct_relevel(race, "Black", "Hispanic", "Asian", "NHW"), 
    term = fct_recode(term, "ε2+" = "e2+", "ε4+" = "e4+", "mCAIDE" = "z_mcaide_nosex")
  )

mcaide_sex_res_df %>% filter(term == "mCAIDE")
```

```{r}
#| label: export_caide
#| code-summary: CAIDE Regression export

mcaide_sex_res.df.out <- mcaide_sex_res_df %>%
  select(race, outcome, predictor = term, estimate, std.error, statistic, p.value) %>%
  mutate(
    or = exp(estimate), 
    or = round(or, 2),
    lci = exp(estimate - std.error * 1.96), 
    lci = round(lci, 2),
    uci = exp(estimate + std.error * 1.96), 
    uci = round(uci, 2),
    estimate = round(estimate, digits = 2),
    std.error = round(std.error, digits = 3),
    statistic = round(statistic, digits = 2),
    stars = case_when(
      p.value > 0.05 ~ "", 
      between(p.value,  0.01, 0.05) ~ "*",
      between(p.value, 0.001, 0.01) ~ "**",
      p.value < 0.001 ~ "***"
    ), 
    p.value = case_when(
      p.value < 0.001 ~ format(p.value, scientific = TRUE, digits = 2),
      p.value >= 0.001 ~ as.character(round(p.value, 3))
    ), 
    predictor = str_replace(predictor, "ε", "e"),
    out = glue("OR [95% CI] = {or} [{lci}, {uci}], p = {p.value}")
    ) 

mcaide_sex_res.df.out %>%
  write_csv(., "results/mcaide_res_sex.csv")

mcaide_sex_res.df.out %>% filter(predictor == "mCAIDE")
```

```{r}
ggplot(mcaide_sex_res_df, aes(x = or, y = race, color = race)) + 
  facet_grid(cols = vars(term), rows = vars(outcome)) + 
  geom_vline(xintercept = 1, linetype = 2) + 
  geom_point() + 
  geom_linerange(aes(xmin = or_lci, xmax = or_hci), linewidth = 0.75) + 
  scale_x_continuous("Odds Ratio", trans = 'log', 
                     breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32), 
                     labels = c(0.25, 0.5, 1, 2, 4, 8, 16, 32)
  ) + 
  scale_color_manual(values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")) + 
  theme_bw() + 
  theme(
    text = element_text(size = theme.size),
    axis.text.x = element_text(angle = 315, vjust = 0.5, hjust=0), 
    axis.title.x = element_blank(),
    legend.position = "bottom", 
    strip.background = element_blank(), 
    strip.text = element_text(face = 'bold')
  )

```

### risk factors

get AUC for all baseline models

lv = last visit

ada_age_lv weighted scoring for AD

get AUC for rf_mod_fit

```{r}
rf_all_bl_res <- glm(dx ~ race + apoe + NACCAGE + SEX + i_EDUC + i_NACCBMI + i_BPSYS + i_hypchol, data = dat, family = 'binomial')
tidy(rf_all_res)

rf_all_lv_res <- glm(dx_lv ~ race + apoe + NACCAGE_lv + SEX + i_EDUC + i_NACCBMI + i_BPSYS + i_hypchol, data = dat, family = 'binomial')
tidy(rf_all_lv_res)

rf_all_lm_res <- lm(ad_age_lv ~ race + apoe + SEX + i_EDUC + i_NACCBMI + i_BPSYS + i_hypchol, data = dat)
tidy(rf_all_lm_res)

```

```{r}
#| label: regression_models
#| code-summary: Regression Models

rf_mod_fit <- function(data){
  # glm(dx ~ apoe_geno + SEX + aoo, data = data, family = 'binomial')
  glm(dx ~ apoe + age + gender + i_educ + i_bmi + i_bpsys + i_hypchol, data = data, family = 'binomial')
}

rf_res <- bind_rows(
  dat %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD + MCI",
      res = map(data, rf_mod_fit), 
    ) %>%
    select(-data), 

  dat %>%
    filter(naccudsd %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD",
      res = map(data, rf_mod_fit), 
    ) %>%
    select(-data), 
  
  dat %>%
    filter(naccetpr %in% c(1, 88)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD + MCI",
      res = map(data, rf_mod_fit), 
    ) %>%
    select(-data), 

  dat %>%
    filter(naccetpr %in% c(1, 88)) %>%
    filter(naccudsd %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD",
      res = map(data, rf_mod_fit), 
    ) %>%
    select(-data), 
) %>%
  mutate(
    fit = map(res, glance),
    df = map(res, tidy), 
  )

rf_res_df <- rf_res %>%
  select(race, outcome, df) %>%
  unnest(cols = df) %>%
  ungroup() %>%
  filter(!str_detect(term, 'Intercept')) %>%
  mutate(
    lci = estimate - (std.error * 1.96),
    hci = estimate + (std.error * 1.96), 
    or = exp(estimate),
    or_lci = exp(lci),
    or_hci = exp(hci),
    term = str_replace(term, "apoe", ""), 
    term = fct_recode(term, "Age" = "age", "Male" = "genderMale", "Education" = 'i_educ', 
                      "BMI" = "i_bmi", 'SBP' = "i_bpsys", "Hyprchol." = 'i_hypchol1'),
    term = fct_relevel(term, 'e2+', 'e4+', 'Age', "Male", "Education", "BMI", "SBP", "Hyprchol."),    
    race = fct_relevel(race, 'Black', 'Hispanic', 'Asian',  'NHW'),
  )
```

```{r}
#| label: export_rf
#| code-summary: RF Regression export

rf_res_df %>%
  select(race, outcome, predictor = term, estimate, std.error, statistic, p.value) %>%
  mutate(
    estimate = round(estimate, digits = 2),
    std.error = round(std.error, digits = 3),
    statistic = round(statistic, digits = 2),
    stars = case_when(
      p.value > 0.05 ~ "", 
      between(p.value,  0.01, 0.05) ~ "*",
      between(p.value, 0.001, 0.01) ~ "**",
      p.value < 0.001 ~ "***"
    ), 
    p.value = case_when(
      p.value < 0.001 ~ format(p.value, scientific = TRUE, digits = 2),
      p.value >= 0.001 ~ as.character(round(p.value, 3))
    ), 
    predictor = str_replace(predictor, "ε", "e"), 
    predictor = str_replace(predictor, "i_hypchol", "Hypercholesterolemia"), 
    ) %>%
  write_csv(., "results/rf_res_all.csv")
```

```{r}
#| label: apoe_plots
#| code-summary: APOE genotype plots


rf_race_all_bl_p <- ggplot(rf_res_df, aes(y = race, x = or, color = race)) + 
  facet_grid(cols = vars(term), rows = vars(outcome), scales = 'free_x') + 
  geom_vline(xintercept = 1, linetype = 2) + 
  geom_point() + 
  geom_linerange(aes(xmin = or_lci, xmax = or_hci), linewidth = 0.75) + 
  # scale_x_continuous("Odds Ratio", trans = 'log', 
  #                    breaks = c(0.25, 0.5, 0.75, 1, 2, 4, 8, 16, 32), 
  #                    labels = c(0.25, 0.5, 0.75, 1, 2, 4, 8, 16, 32)
  # ) + 
  scale_color_manual(values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")) + 
  theme_bw() + 
  theme(
    text = element_text(size = theme.size),
    # axis.text.x = element_text(angle = 315, vjust = 0.5, hjust=0), 
    # axis.title.x = element_blank(),
    legend.position = "bottom", 
    strip.background = element_blank(), 
    strip.text = element_text(face = 'bold')
    )


ggsave("results/figures/joint_apoe_race_all_bl.png", plot = rf_race_all_bl_p, width = 9, height = 5, units = 'in')

```

```{r}
#| label: apoe_plots
#| code-summary: APOE genotype plots


rf_race_all_adrd_mci_bl_p <- ggplot(rf_res_df %>% filter(outcome == "ADRD + MCI"), aes(y = race, x = or, color = race)) + 
  facet_grid(cols = vars(term), rows = vars(outcome), scales = 'free_x') + 
  geom_vline(xintercept = 1, linetype = 2) + 
  geom_point() + 
  geom_linerange(aes(xmin = or_lci, xmax = or_hci), linewidth = 0.75) + 
  # scale_x_continuous("Odds Ratio", trans = 'log', 
  #                    breaks = c(0.25, 0.5, 0.75, 1, 2, 4, 8, 16, 32), 
  #                    labels = c(0.25, 0.5, 0.75, 1, 2, 4, 8, 16, 32)
  # ) + 
  scale_color_manual(values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")) + 
  scale_y_discrete(limits=rev) +  
  theme_bw() + 
  labs(xlab = "Odds Ratio") + 
  theme(
    text = element_text(size = theme.size),
    axis.title.y = element_blank(),
    axis.text.x = element_text(size = 5),
    legend.position = "bottom", 
    strip.background = element_blank(), 
    strip.text = element_text(face = 'bold')
    )


ggsave("results/figures/joint_rf_race_all_adrd_mci_bl.png", plot = rf_race_all_adrd_mci_bl_p, width = 9, height = 4, units = 'in')

```

```{r}
## Combined plot

outfile_poster.path = '~/Downloads/apoe_caide_poster.png'
# tiff(outfile_neuron.path, width = 9, height = 4.5, units = "in", res = 300)
png(outfile_poster.path, width = 24, height = 22, units = "in", res = 600)
pageCreate(width = 24, height = 22, default.units = "inches")

plotGG(
  plot = nacc_caid_apoe_adrd_mci_bl_p,
  x = 0, y = 0,
  width = 12, height = 11, just = c("left", "top")
)

plotGG(
  plot = caide_apoe_adrd_mci_bl_p,
  x = 0, y = 11,
  width = 12, height = 11, just = c("left", "top")
)


plotGG(
  plot = nacc_mcaid_apoe_adrd_mci_bl_p,
  x = 12, y = 0,
  width = 12, height = 11, just = c("left", "top")
)

plotGG(
  plot = mcaide_apoe_adrd_mci_bl_p,
  x = 12, y = 11,
  width = 12, height = 11, just = c("left", "top")
)

pageGuideHide()
dev.off()


```

### Manuscript Figures

#### Figure 1

```{r}
#| label: adard_mci_apoe_plots
#| code-summary: ADRD+MCI Main effect plots

joint_caid_apoe_adrd_mci_diff <- caide_df_pval %>% 
  filter(outcome == "ADRD + MCI") 

theme.size = 8

joint_caid_apoe_adrd_mci_bl_p <- ggplot(caide_res.df %>% filter(outcome == "ADRD + MCI"), aes(y = or, x = race, color = race)) + 
    facet_grid(cols = vars(term), rows = vars(outcome), scales = 'free') + 
    coord_cartesian(ylim=c(0.5, 5.3)) + 
    geom_hline(yintercept = 1, linetype = 2) + 
    geom_linerange(aes(ymin = or_lci, ymax = or_hci), linewidth = 0.5) + 
    geom_point(size = 0.75) + 
    ggprism::add_pvalue(joint_caid_apoe_adrd_mci_diff,
                        bracket.nudge.y = 4.2,
                        label = "{stars}", colour = 'black',
                        tip.length = 0.01, bracket.size = 0.2) +
    # scale_x_continuous("Odds Ratio", trans = 'log', 
    #                    breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32), 
    #                    labels = c(0.25, 0.5, 1, 2, 4, 8, 16, 32)
    # ) + 
    # scale_x_discrete(limits=rev) +  
    scale_color_manual(
      labels = c("Black", "Latinx", "Asian", "NHW"),
      values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")) + 
    theme_bw() + 
    labs(y = "OR (95% CI)") + 
    theme(
      text = element_text(size = 8),
      axis.title.x = element_blank(),
      axis.text.x = element_blank(),
      axis.ticks.x = element_blank(),
      legend.position = "bottom", 
      legend.title = element_blank(),
      strip.background = element_blank(), 
      panel.grid.major.x = element_blank(),
      panel.grid.minor.x = element_blank(),
      panel.grid.minor.y = element_blank(),
      strip.text = element_text(face = 'bold')
      )



```

```{r}
#| label: adard_mci_apoe_plots
#| code-summary: ADRD+MCI Main effect plots

joint_mcaid_apoe_adrd_mci_diff <- mcaide_df_pval %>% 
  filter(outcome == "ADRD + MCI") 

theme.size = 8

joint_mcaid_apoe_adrd_mci_bl_p <- ggplot(mcaide_res_df %>% filter(outcome == "ADRD + MCI"), aes(y = or, x = race, color = race)) + 
    facet_grid(cols = vars(term), rows = vars(outcome), scales = 'fixed') + 
    coord_cartesian(ylim=c(0.5, 5.3)) + 
    geom_hline(yintercept = 1, linetype = 2) + 
    geom_linerange(aes(ymin = or_lci, ymax = or_hci), linewidth = 0.5) + 
    geom_point(size = 0.75) + 
    ggprism::add_pvalue(joint_mcaid_apoe_adrd_mci_diff,
                        bracket.nudge.y = 4.2,
                        label = "{stars}", colour = 'black',
                        tip.length = 0.01, bracket.size = 0.2) +
    # scale_x_continuous("Odds Ratio", trans = 'log', 
    #                    breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32), 
    #                    labels = c(0.25, 0.5, 1, 2, 4, 8, 16, 32)
    # ) + 
    # scale_x_discrete(limits=rev) +  
    scale_color_manual(
      labels = c("Black", "Latinx", "Asian", "NHW"),
      values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")) + 
    theme_bw() + 
    labs(y = "OR (95% CI)") + 
    theme(
      text = element_text(size = 8),
      axis.title.x = element_blank(),
      axis.text.x = element_blank(),
      axis.ticks.x = element_blank(),
      panel.grid.major.x = element_blank(),
      panel.grid.minor.x = element_blank(),
      panel.grid.minor.y = element_blank(),
      legend.position = "bottom", 
      strip.background = element_blank(), 
      strip.text = element_text(face = 'bold')
      )

```

```{r}
## Combined plot
legend_f1 <- cowplot::get_legend(joint_caid_apoe_adrd_mci_bl_p)

outfile_poster.path = '~/Downloads/joint_caide_mcaide_adrd_mci.png'
# tiff(outfile_neuron.path, width = 9, height = 4.5, units = "in", res = 300)
png(outfile_poster.path, width = 5, height = 3, units = "in", res = 600)
pageCreate(width = 3.5, height = 3.5, default.units = "inches")

plotGG(
  plot = joint_caid_apoe_adrd_mci_bl_p + theme(legend.position = "none"),
  x = 0, y = 0,
  width = 3.5, height = 1.5, just = c("left", "top")
)

plotGG(
  plot = joint_mcaid_apoe_adrd_mci_bl_p + theme(legend.position = "none"),
  x = 0, y = 1.5,
  width = 3.5, height = 1.5, just = c("left", "top")
)

plotGG(
  plot = legend_f1 ,
  x = 0, y = 2.4,
  width = 3.5, height = 1.5, just = c("left", "top")
)

pageGuideHide()
dev.off()


```

#### Figure 2

```{r}
#| label: caide_apoe_adrd_mci_bl_presentation
#| code-summary: CAIDE * APOE ADRD + MCI plots

f2.df <- bind_rows(
  filter(caide_apoe_cat_df, outcome == "ADRD + MCI") %>%
    mutate(model = "CAIDE"),
  filter(mcaide_apoe_cat_df, outcome == "ADRD + MCI")  %>%
    mutate(model = "mCAIDE")
) %>%
  mutate(
    term = str_replace_all(term, "e2", "ε2"), 
    term = str_replace_all(term, "e3", "ε3"),
    term = str_replace_all(term, "e4", "ε4"), 
    term = fct_relevel(term, "Favourable, ε2+", "Intermediate, ε2+", "Unfavourable, ε2+",
                       "Favourable, ε3/ε3", "Intermediate, ε3/ε3 (reference)", "Unfavourable, ε3/ε3",
                       "Favourable, ε4+", "Intermediate, ε4+", "Unfavourable, ε4+")
  )

theme.size = 8

figure2 <- f2.df  %>% 
  ggplot(., aes(x = or, y = term, color = race, shape = reference)) + 
    facet_grid(cols = vars(race), rows = vars(model), scales = "free_x") + 
    geom_vline(xintercept = 1, linetype = 2) + 
    geom_point() + 
    geom_linerange(aes(xmin = or_lci, xmax = or_hci), linewidth = 0.75) + 
    scale_x_continuous("OR (95% CI)", trans = 'log',
                       breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32),
                       labels = c(0.25, 0.5, 1, 2, 4, 8, 16, 32), 
                       limits = c(0.15, 9), 
                       oob=scales::rescale_none
    ) +
    scale_color_manual(
      values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")
      ) + 
    scale_y_discrete(limits=rev) +  
    scale_shape_manual(values = c(16, 15), guide = 'none') + 
    theme_bw() + 
    theme(
      text = element_text(size = theme.size),
      axis.title.y = element_blank(),
      # axis.text.x = element_text(size = 10),
      legend.position = "bottom", 
      legend.title = element_blank(),
      strip.background = element_blank(), 
      strip.text = element_text(face = 'bold')
      )

ggsave("results/figures/figure2.png", plot = figure2, width = 6, height = 3.5, units = 'in')

```

#### Figure 3

```{r}
sex_df <- bind_rows(
  caide_sex_res.df,
  mcaide_sex_res_df
) %>%
  filter(str_detect(term, 'CAIDE'))

figure3 <- ggplot(sex_df, aes(x = or, y = race, color = race)) + 
  facet_grid(cols = vars(term), rows = vars(outcome)) + 
  geom_vline(xintercept = 1, linetype = 2) + 
  geom_point() + 
  geom_linerange(aes(xmin = or_lci, xmax = or_hci), linewidth = 0.75) + 
  scale_x_continuous("Odds Ratio", trans = 'log', 
                     breaks = c(0.75, 1, 1.5, 2), 
                     labels = c(0.75, 1, 1.5, 2)
  ) + 
  scale_color_manual(values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")) + 
  theme_bw() + 
  theme(
    text = element_text(size = theme.size),
    axis.title.y = element_blank(),
    legend.position = "none", 
    strip.background = element_blank(), 
    strip.text = element_text(face = 'bold')
  )

ggsave("results/figures/figure3.png", plot = figure3, width = 6, height = 3.5, units = 'in')


```

## AD Age Score

```{r}
dat_sdx <- dat %>%
  # select(NACCID, NACCAVST, DECAGE, SEX, NACCAGE, i_EDUC, i_NACCBMI, i_BPSYS, i_hypchol, race, apoe, aoo_lv, dx_lv, 
  #        z_caide, caide_cat, caide_apoe, 
  #        z_mcaide, mcaide_cat, mcaide_apoe, 
  #        NACCUDSD, NACCETPR) %>%
  # filter(NACCAVST >= 2) %>%
  filter(!is.na(sdx_lv)) 
```

### APOE Genotype

```{r}
#| label: apoe_regression_models
#| code-summary: APOE genotype Regression Models

apoe_sdx_fit <- function(data){
  # glm(dx ~ apoe_geno + SEX + aoo, data = data, family = 'binomial')
  lm(sdx_lv ~ apoe_geno + SEX, data = data, family = 'binomial')
}

apoe_sdx_res <- bind_rows(
  dat_sdx %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD + MCI",
      res = map(data, apoe_mod_fit), 
    ) %>%
    select(-data), 

  dat_sdx %>%
    filter(NACCUDSD %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD",
      res = map(data, apoe_mod_fit), 
    ) %>%
    select(-data), 
  
  dat_sdx %>%
    filter(NACCETPR %in% c(1, 88)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD + MCI",
      res = map(data, apoe_mod_fit), 
    ) %>%
    select(-data), 

  dat_sdx %>%
    filter(NACCETPR %in% c(1, 88)) %>%
    filter(NACCUDSD %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD",
      res = map(data, apoe_mod_fit), 
    ) %>%
    select(-data), 
) %>%
  mutate(
    fit = map(res, glance),
    df = map(res, tidy), 
  )

apoe_sdx_df <- apoe_sdx_res %>%
  select(race, outcome, df) %>%
  unnest(cols = df) %>%
  ungroup() %>%
  filter(str_detect(term, 'apoe')) %>%
  mutate(
    lci = estimate - (std.error * 1.96),
    hci = estimate + (std.error * 1.96), 
    term = str_replace(term, "apoe_geno", ""), 
    term = fct_relevel(term, 'e3/e3', 'e2+', 'e2/e4', 'e3/e4', 'e4/e4'),    
  )
```

```{r}
#| label: apoe_difference
#| code-summary: APOE genotype differences

apoe_sdx_diff <- apoe_sdx_df %>%
  select(race, outcome, term, b = estimate, se = std.error) %>%
  pivot_wider(names_from = race, values_from = c(b, se)) %>%
  mutate(.,
         ## Black vs NHW
         diff_nhw_bla = fzscore(b_NHW, b_Black, se_NHW, se_Black),
         p_diff_nhw_bla = 2*pnorm(q=abs(diff_nhw_bla), lower.tail=FALSE),
         # NHW vs Hispanic
         diff_nhw_his = fzscore(b_NHW, b_Hispanic, se_NHW, se_Hispanic), 
         p_diff_nhw_his = 2*pnorm(q=abs(diff_nhw_his), lower.tail=FALSE),
         # NHW vs Asian
         diff_nhw_asi = fzscore(b_NHW, b_Asian, se_NHW, se_Asian), 
         p_diff_nhw_asi = 2*pnorm(q=abs(diff_nhw_asi), lower.tail=FALSE),
    
         # Black vs Hispanic
         diff_bla_his = fzscore(b_Black, b_Hispanic, se_Black, se_Hispanic), 
         p_diff_bla_his = 2*pnorm(q=abs(diff_bla_his), lower.tail=FALSE),
         # Black vs Asian
         diff_bla_asi = fzscore(b_Black, b_Asian, se_Black, se_Asian), 
         p_diff_bla_asi = 2*pnorm(q=abs(diff_bla_asi), lower.tail=FALSE),
         
         # Hispanic vs Asian
         diff_his_asi = fzscore(b_Hispanic, b_Asian, se_Hispanic, se_Asian), 
         p_diff_his_asi = 2*pnorm(q=abs(diff_his_asi), lower.tail=FALSE)
  )

apoe_sdx_diff_long <- full_join(
  apoe_sdx_diff %>%
    select(term, outcome, starts_with('diff')) %>%
    pivot_longer(
      cols = starts_with('diff'),
      names_to = 'contrast', 
      values_to = 'z', 
      names_prefix = "diff_",
    ),
  
  apoe_sdx_diff %>%
    select(term, outcome, starts_with('p_')) %>%
    pivot_longer(
      cols = starts_with('p_'),
      names_to = 'contrast', 
      values_to = 'p', 
      names_prefix = "p_diff_",
    )
) %>%
  separate(contrast, sep = "_", into = c("race1", "race2")) %>%
  mutate(
    stars = case_when(
      p > 0.05 ~ "", 
      between(p,  0.01, 0.05) ~ "*",
      between(p, 0.001, 0.01) ~ "**",
      p < 0.001 ~ "***"
    )
  )

apoe_sdx_df_pval <- filter(apoe_sdx_diff_long, p < 0.05) %>%
  rename(group1 = race1, group2 = race2) %>%
  mutate(y.position = c(3, 3), 
         group1 = case_when(
           group1 == "nhw" ~ "NHW", 
           group1 == "bla" ~ "Black", 
           group1 == "jpa" ~ "Asian", 
           group1 == "his" ~ "Hispanic"
         ), 
         group2 = case_when(
           group2 == "nhw" ~ "NHW", 
           group2 == "bla" ~ "Black", 
           group2 == "jpa" ~ "Asian", 
           group2 == "his" ~ "Hispanic"
         ),
         race = NA, 
         reference = NA,
          term = fct_recode(term, "ε2+" = "e2+", "ε2/ε4" = "e2/e4", "ε3/ε4" = "e3/e4", "ε4/ε4" = "e4/e4")

  )
```

```{r}
#| label: apoe_plots
#| code-summary: APOE genotype plots

theme.size = 8

apoe_geno_sdx_res_p <- apoe_sdx_df %>%
    # filter(., outcome == "AD") %>%
    #   add_row(
    #   outcome = c("AD", "AD + MCI", "ADRD", "ADRD + MCI"),
    #   race = c('Black', 'Hispanic', 'Asian',  'NHW'),
    #   or = 1,
    #   term =  "e3/e3",
    # ) %>%
  mutate(race = fct_relevel(race, 'Black', 'Hispanic', 'Asian',  'NHW'), 
        term = fct_recode(term, "ε2+" = "e2+",  "ε3/ε3 \n(reference)" = "e3/e3",
                          "ε2/ε4" = "e2/e4", "ε3/ε4" = "e3/e4", "ε4/ε4" = "e4/e4"),
        term = fct_relevel(term, "ε2+", "ε3/ε3 \n(reference)", "ε2/ε4", "ε3/ε4", "ε4/ε4"),
        reference = ifelse(estimate == 0, TRUE, FALSE)
        ) %>%
  ggplot(., aes(x = race, y = estimate, color = race)) + 
    facet_grid(cols = vars(term), rows = vars(outcome)) + 
    geom_hline(yintercept = 1, linetype = 2) + 
    geom_point() + 
    geom_linerange(aes(ymin = lci, ymax = hci), linewidth = 0.75) + 
    # scale_y_continuous("Odds Ratio", trans = 'log', 
    #                    breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32), 
    #                    labels = c(0.25, 0.5, 1, 2, 4, 8, 16, 32)
    # ) + 
    scale_color_manual(values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")) + 
    theme_bw() + 
    theme(
      text = element_text(size = theme.size),
      axis.text.x = element_text(angle = 315, vjust = 0.5, hjust=0), 
      axis.title.x = element_blank(),
      legend.position = "bottom", 
      strip.background = element_blank(), 
      strip.text = element_text(face = 'bold')
      ) + 
  ggprism::add_pvalue(df_pval #%>% filter(outcome == "AD")
                      , bracket.nudge.y = 3, label = "{stars}", colour = 'black', tip.length = 0.01, bracket.size = 0.2) 

apoe_geno_res_p
ggsave("results/figures/nacc_apoe_race_all_bl.png", plot = apoe_geno_res_p, width = 9, height = 5, units = 'in')

```

### Risk Factors

```{r}
lm_res <- lm(ad_age_lv ~ race + apoe + SEX + i_EDUC + i_NACCBMI + i_BPSYS + i_hypchol, data = dat) 
lm_res <- lm(sdx_lv ~ race + apoe + SEX + i_EDUC + i_NACCBMI + i_BPSYS + i_hypchol, data = dat) 
tidy(lm_res)

ggplot(dat, aes(x = aoo, y = sdx_lv, color = as.factor(dx_lv))) + 
  geom_smooth()

ggplot(dat, aes(x = aoo, y = sdx_lv, color = as.factor(dx_lv))) + 
  geom_smooth() + 
  facet_wrap(vars(race))

```

```{r}
#| label: regression_models
#| code-summary: Regression Models

rf_lm_fit <- function(data){
  # glm(dx ~ apoe_geno + SEX + aoo, data = data, family = 'binomial')
  lm(sdx_lv ~ apoe + NACCAGE + SEX + i_EDUC + i_NACCBMI + i_BPSYS + i_hypchol, data = data)
}

rf_lm_res <- bind_rows(
  dat_sdx %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD + MCI",
      res = map(data, rf_lm_fit), 
    ) %>%
    select(-data), 

  dat_sdx %>%
    filter(NACCUDSD %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD",
      res = map(data, rf_lm_fit), 
    ) %>%
    select(-data), 
  
  dat_sdx %>%
    filter(NACCETPR %in% c(1, 88)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD + MCI",
      res = map(data, rf_mod_fit), 
    ) %>%
    select(-data), 

  dat_sdx %>%
    filter(NACCETPR %in% c(1, 88)) %>%
    filter(NACCUDSD %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD",
      res = map(data, rf_lm_fit), 
    ) %>%
    select(-data), 
) %>%
  mutate(
    fit = map(res, glance),
    df = map(res, tidy), 
  )

rf_res_df <- rf_lm_res %>%
  select(race, outcome, df) %>%
  unnest(cols = df) %>%
  ungroup() %>%
  filter(!str_detect(term, 'Intercept')) %>%
  mutate(
    lci = estimate - (std.error * 1.96),
    hci = estimate + (std.error * 1.96), 
    or = exp(estimate),
    or_lci = exp(lci),
    or_hci = exp(hci),
    term = str_replace(term, "apoe", ""), 
    term = fct_recode(term, "Age" = "NACCAGE", "Female" = "SEX2", "Education" = 'i_EDUC', 
                      "BMI" = "i_NACCBMI", 'SBP' = "i_BPSYS", "Hyprchol." = 'i_hypchol1'),
    term = fct_relevel(term, 'e2+', 'e4+', 'Age', "Female", "Education", "BMI", "SBP", "Hyprchol."),    
    race = fct_relevel(race, 'Black', 'Hispanic', 'Asian',  'NHW'),
  )
```

### CAIDE

```{r}
glm(dx ~ race + apoe + z_caide, data = dat, family = 'binomial') %>% 
  tidy()

glm(dx_lv ~ race + apoe + z_caide, data = dat, family = 'binomial') %>% 
  tidy()

lm(sdx_lv ~ race + apoe + z_caide, data = dat) %>% 
  tidy()

```

```{r}
#| label: regression_models
#| code-summary: Regression Models

caide_sdx_fit <- function(data){
  lm(sdx_lv ~ apoe + z_caide, data = data)
}

caide_sdx_res  <- bind_rows(
  dat_sdx %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD + MCI",
      res = map(data, caide_sdx_fit), 
    ) %>%
    select(-data), 

  dat_sdx %>%
    filter(NACCUDSD %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD",
      res = map(data, caide_sdx_fit), 
    ) %>%
    select(-data), 
  
  dat_sdx %>%
    filter(NACCETPR %in% c(1, 88)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD + MCI",
      res = map(data, caide_sdx_fit), 
    ) %>%
    select(-data), 

  dat_sdx %>%
    filter(NACCETPR %in% c(1, 88)) %>%
    filter(NACCUDSD %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD",
      res = map(data, caide_sdx_fit), 
    ) %>%
    select(-data), 
) %>%
  mutate(
    fit = map(res, glance),
    df = map(res, tidy), 
  )

caide_sdx_df <- caide_sdx_res  %>%
  select(race, outcome, df) %>%
  unnest(cols = df) %>%
  ungroup() %>%
  filter(str_detect(term, 'apoe|caide')) %>%
  mutate(
    lci = estimate - (std.error * 1.96),
    hci = estimate + (std.error * 1.96), 
    term = str_replace(term, "apoe", ""), 
    term = fct_relevel(term, 'e2+', 'e4+', 'z_caide'),    
  )

group_split(caide_sdx_df, outcome) 
```

#### Interaction

```{r}
#| label: regression_models
#| code-summary: Regression Models

add_me <- tibble(
    outcome = c("AD", "AD + MCI", "ADRD", "ADRD + MCI"),
    race = c('Black', 'Hispanic', 'Asian',  'NHW'),
  ) %>% 
    expand(outcome, race) %>%
    mutate(
      estimate = 0, 
      term = "mid_e3/e3"
    )

caide_apoe_cat_sdx_fit <- function(data){
  lm(sdx_lv ~ caide_apoe, data = data)
}

caide_apoe_cat_sdx_res <- bind_rows(
  dat_sdx %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD + MCI",
      res = map(data, caide_apoe_cat_sdx_fit), 
    ) %>%
    select(-data), 

  dat_sdx %>%
    filter(NACCUDSD %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD",
      res = map(data, caide_apoe_cat_sdx_fit), 
    ) %>%
    select(-data), 
  
  dat_sdx %>%
    filter(NACCETPR %in% c(1, 88)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD + MCI",
      res = map(data, caide_apoe_cat_sdx_fit), 
    ) %>%
    select(-data), 

  dat_sdx %>%
    filter(NACCETPR %in% c(1, 88)) %>%
    filter(NACCUDSD %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD",
      res = map(data, caide_apoe_cat_sdx_fit), 
    ) %>%
    select(-data), 
) %>%
  mutate(
    fit = map(res, glance),
    df = map(res, tidy), 
  )

caide_apoe_cat_sdx_df <- caide_apoe_cat_sdx_res %>%
  select(race, outcome, df) %>%
  unnest(cols = df) %>%
  ungroup() %>%
  filter(str_detect(term, 'caide_apoe'))  %>%
  bind_rows(add_me) %>%
  mutate(
    lci = estimate - (std.error * 1.96),
    hci = estimate + (std.error * 1.96), 
    term = str_replace(term, "caide_apoe", ""), 
    term = fct_relevel(term, 
                       "high_e4+", "mid_e4+", "low_e4+", 
                       "high_e3/e3", "mid_e3/e3",  "low_e3/e3", 
                        "high_e2+", "mid_e2+", "low_e2+",
                       ),
    term = fct_recode(term, 
                     "Unfavourable, e4+" = "high_e4+", "Intermediate, e4+" = "mid_e4+", "Favourable, e4+" = "low_e4+", 
                     "Unfavourable, e3/e3" = "high_e3/e3", "Intermediate, e3/e3 (reference)" = "mid_e3/e3", "Favourable, e3/e3" = "low_e3/e3", 
                     "Unfavourable, e2+" = "high_e2+", "Intermediate, e2+" = "mid_e2+", "Favourable, e2+" = "low_e2+" 
                      ),
    reference = ifelse(estimate == 0, TRUE, FALSE)
  ) 

```

```{r}
#| label: apoe_plots
#| code-summary: APOE genotype plots

theme.size = 8

ggplot(caide_apoe_cat_sdx_df, aes(x = estimate, y = term, color = race, shape = reference)) + 
  facet_grid(cols = vars(race), rows = vars(outcome), scales = "free_x") + 
  geom_vline(xintercept = 0, linetype = 2) + 
  geom_point() + 
  geom_linerange(aes(xmin = lci, xmax = hci), linewidth = 0.75) + 
  scale_x_continuous("β coefficent", #trans = 'log', 
                     # breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32), 
                     # labels = c(0.25, 0.5, 1, 2, 4, 8, 16, 32)
  ) + 
  scale_color_manual(values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")) + 
  scale_shape_manual(values = c(16, 15)) + 
  theme_bw() + 
  theme(
    text = element_text(size = theme.size),
    axis.title.y = element_blank(),
    legend.position = "bottom", 
    strip.background = element_blank(), 
    strip.text = element_text(face = 'bold')
    )


ggsave("results/figures/nacc_apoe_race_all_bl.png", plot = apoe_geno_res_p, width = 9, height = 5, units = 'in')

```

### mCAIDE

```{r}
glm(dx ~ race + apoe + z_mcaide, data = dat, family = 'binomial') %>% 
  tidy()

glm(dx_lv ~ race + apoe + z_mcaide, data = dat, family = 'binomial') %>% 
  tidy()

lm(ad_age_lv ~ race + apoe + z_mcaide, data = dat) %>% 
  tidy()

```

```{r}
#| label: regression_models
#| code-summary: Regression Models

mcaide_sdx_fit <- function(data){
  # glm(dx ~ apoe_geno + SEX + aoo, data = data, family = 'binomial')
  lm(sdx_lv ~ apoe + z_mcaide, data = data)
}

mcaide_sdx_res <- bind_rows(
  dat_sdx %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD + MCI",
      res = map(data, mcaide_mod_fit), 
    ) %>%
    select(-data), 

  dat_sdx %>%
    filter(NACCUDSD %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD",
      res = map(data, mcaide_mod_fit), 
    ) %>%
    select(-data), 
  
  dat_sdx %>%
    filter(NACCETPR %in% c(1, 88)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD + MCI",
      res = map(data, mcaide_mod_fit), 
    ) %>%
    select(-data), 

  dat_sdx %>%
    filter(NACCETPR %in% c(1, 88)) %>%
    filter(NACCUDSD %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD",
      res = map(data, mcaide_mod_fit), 
    ) %>%
    select(-data), 
) %>%
  mutate(
    fit = map(res, glance),
    df = map(res, tidy), 
  )

mcaide_sdx_df <- mcaide_sdx_res %>%
  select(race, outcome, df) %>%
  unnest(cols = df) %>%
  ungroup() %>%
  filter(str_detect(term, 'apoe|caide')) %>%
  mutate(
    lci = estimate - (std.error * 1.96),
    hci = estimate + (std.error * 1.96), 
    or = exp(estimate),
    or_lci = exp(lci),
    or_hci = exp(hci),
    term = str_replace(term, "apoe", ""), 
    term = fct_relevel(term, 'e2+', 'e4+', 'z_mcaide'),    
  )

group_split(mcaide_sdx_df, outcome)
```

#### Interaction

```{r}
#| label: regression_models
#| code-summary: Regression Models

add_me <- tibble(
    outcome = c("AD", "AD + MCI", "ADRD", "ADRD + MCI"),
    race = c('Black', 'Hispanic', 'Asian',  'NHW'),
  ) %>% 
    expand(outcome, race) %>%
    mutate(
      estimate = 0, 
      term = "mid_e3/e3"
    )

mcaide_apoe_cat_sdx_fit <- function(data){
  lm(sdx_lv ~ mcaide_apoe, data = data)
}

mcaide_apoe_cat_sdx_res <- bind_rows(
  dat_sdx %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD + MCI",
      res = map(data, mcaide_apoe_cat_sdx_fit), 
    ) %>%
    select(-data), 

  dat_sdx %>%
    filter(NACCUDSD %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD",
      res = map(data, mcaide_apoe_cat_sdx_fit), 
    ) %>%
    select(-data), 
  
  dat_sdx %>%
    filter(NACCETPR %in% c(1, 88)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD + MCI",
      res = map(data, mcaide_apoe_cat_sdx_fit), 
    ) %>%
    select(-data), 

  dat_sdx %>%
    filter(NACCETPR %in% c(1, 88)) %>%
    filter(NACCUDSD %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD",
      res = map(data, mcaide_apoe_cat_sdx_fit), 
    ) %>%
    select(-data), 
) %>%
  mutate(
    fit = map(res, glance),
    df = map(res, tidy), 
  )

mcaide_apoe_cat_sdx_df <- mcaide_apoe_cat_sdx_res %>%
  select(race, outcome, df) %>%
  unnest(cols = df) %>%
  ungroup() %>%
  filter(str_detect(term, 'mcaide_apoe'))  %>%
  bind_rows(add_me) %>%
  mutate(
    lci = estimate - (std.error * 1.96),
    hci = estimate + (std.error * 1.96), 
    term = str_replace(term, "mcaide_apoe", ""), 
    term = fct_relevel(term, 
                       "high_e4+", "mid_e4+", "low_e4+", 
                       "high_e3/e3", "mid_e3/e3",  "low_e3/e3", 
                        "high_e2+", "mid_e2+", "low_e2+",
                       ),
    term = fct_recode(term, 
                     "Unfavourable, e4+" = "high_e4+", "Intermediate, e4+" = "mid_e4+", "Favourable, e4+" = "low_e4+", 
                     "Unfavourable, e3/e3" = "high_e3/e3", "Intermediate, e3/e3 (reference)" = "mid_e3/e3", "Favourable, e3/e3" = "low_e3/e3", 
                     "Unfavourable, e2+" = "high_e2+", "Intermediate, e2+" = "mid_e2+", "Favourable, e2+" = "low_e2+" 
                      ),
    reference = ifelse(estimate == 0, TRUE, FALSE)
  ) 

```

```{r}
#| label: apoe_plots
#| code-summary: APOE genotype plots

theme.size = 8

ggplot(mcaide_apoe_cat_sdx_df, aes(x = estimate, y = term, color = race, shape = reference)) + 
  facet_grid(cols = vars(race), rows = vars(outcome), scales = "free_x") + 
  geom_vline(xintercept = 0, linetype = 2) + 
  geom_point() + 
  geom_linerange(aes(xmin = lci, xmax = hci), linewidth = 0.75) + 
  scale_x_continuous("β coefficent", #trans = 'log', 
                     # breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32), 
                     # labels = c(0.25, 0.5, 1, 2, 4, 8, 16, 32)
  ) + 
  scale_color_manual(values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")) + 
  scale_shape_manual(values = c(16, 15)) + 
  theme_bw() + 
  theme(
    text = element_text(size = theme.size),
    axis.title.y = element_blank(),
    legend.position = "bottom", 
    strip.background = element_blank(), 
    strip.text = element_text(face = 'bold')
    )


ggsave("results/figures/nacc_apoe_race_all_bl.png", plot = apoe_geno_res_p, width = 9, height = 5, units = 'in')
```

## Cox Regression models

```{r}
## last visit
dat_lv <- dat %>%
  # select(NACCID, NACCAVST, DECAGE, SEX, NACCAGE, i_EDUC, i_NACCBMI, i_BPSYS, i_hypchol, race, apoe, aoo_lv, dx_lv, 
  #        z_caide, caide_cat, caide_apoe, 
  #        z_mcaide, mcaide_cat, mcaide_apoe, 
  #        NACCUDSD, NACCETPR) %>%
  filter(!is.na(aoo), !is.na(dx_aoo)) 

dat_lv2 <- dat %>%
  # select(NACCID, NACCAVST, DECAGE, SEX, NACCAGE, i_EDUC, i_NACCBMI, i_BPSYS, i_hypchol, race, apoe, aoo_lv, dx_lv, 
  #        z_caide, caide_cat, caide_apoe, 
  #        z_mcaide, mcaide_cat, mcaide_apoe, 
  #        NACCUDSD, NACCETPR) %>%
  filter(!is.na(aoo_lv), !is.na(dx_lv)) 

count(dat_lv, NACCAVST >= 2, race)
count(dat_lv, DECAGE < NACCAGE)
count(dat_lv, dx, dx_aoo)
count(dat_lv, NACCAVST >= 2, dx_aoo)

###
count(dat_lv, race, dx_lv) %>% 
  filter(!is.na(dx_lv)) %>%
  mutate(
    dx_lv = as.character(dx_lv),
    dx_lv = fct_recode(dx_lv, "CU" = "0", "ADRD" = "1")
    ) %>%
  pivot_wider(
    names_from = dx_lv, values_from = n
  ) %>%
  mutate(
    n = CU + ADRD, 
    EffN = 4/(1/ADRD + 1/CU)
  )


## Survical model 
surv_mod <- function(data){with(data, Surv(aoo, dx_aoo))}

## Survical fit
dat.surv <- with(dat_lv, Surv(aoo, dx_aoo))
dat.surv <- with(dat_lv, Surv(aoo_lv, dx_lv))


dat.survfit <- survfit(Surv(aoo, dx_aoo) ~ apoe, start.time=55, data = dat_lv)
dat.survfit <- survfit(Surv(aoo, dx_aoo) ~ caide_cat, start.time=55, data = dat_lv)
dat.survfit <- survfit(Surv(aoo, dx_aoo) ~ mcaide_cat, start.time=55, data = dat_lv)
dat.survfit <- survfit(Surv(aoo, dx_aoo) ~ caide_apoe, start.time=55, data = dat_lv)
dat.survfit <- survfit(Surv(aoo, dx_aoo) ~ race, start.time=55, data = dat_lv)
 
ggsurvplot(dat.survfit, data = dat_lv, risk.table = TRUE,  pval = TRUE, 
           palette = "Set1",
           ggtheme = theme_minimal()) 

dat.survfit2 <- survfit(Surv(aoo_lv, dx_lv) ~ apoe, start.time=55, data = dat_lv2)
dat.survfit2 <- survfit(Surv(aoo_lv, dx_lv) ~ caide_cat, start.time=55, data = dat_lv2)
dat.survfit2 <- survfit(Surv(aoo_lv, dx_lv) ~ mcaide_cat, start.time=55, data = dat_lv2)
dat.survfit2 <- survfit(Surv(aoo, dx_aoo) ~ caide_apoe, start.time=55, data = dat_lv2)
dat.survfit2 <- survfit(Surv(aoo, dx_aoo) ~ race, start.time=55, data = dat_lv)

ggsurvplot(dat.survfit2, data = dat_lv2, risk.table = TRUE,  pval = TRUE, 
           palette = "Set1",
           ggtheme = theme_minimal()) 

```

### CAIDE

#### KM Curves

```{r}
caide.survfit <- survfit(Surv(aoo, dx_aoo) ~ caide_cat, start.time=55, data = dat_lv)

ggsurvplot(caide.survfit, data = dat_lv, risk.table = TRUE,  pval = TRUE, 
           palette = "Set1",
           ggtheme = theme_minimal()) 

all_cox_res <- coxph(dat.surv ~ z_caide + apoe + race, data=dat_lv)

```

#### Cox Regression

```{r}
## Cox model
caide_cox_fit <- function(surv, data){
  coxph(surv ~ z_caide + apoe, data=data)
}

caide_apoe_cox_fit <- function(surv, data){
  coxph(surv ~ caide_apoe, data=data)
}

## results 
caide_cox_res <- bind_rows(
  dat_lv %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD + MCI",
      surv = map(data, surv_mod),
      res = map2(surv, data, caide_cox_fit),
    ), 

  dat_lv %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD + MCI",
      surv = map(data, surv_mod),
      res = map2(surv, data, caide_apoe_cox_fit),
    ), 

  # dat_lv %>%
  #   filter(NACCUDSD %nin% c(3)) %>%
  #   group_by(race) %>%
  #   nest() %>%
  #   mutate(
  #     outcome = "ADRD",
  #     surv = map(data, surv_mod),
  #     res = map2(surv, data, caide_cox_fit),
  #   ), 
  # 
  # dat_lv %>%
  #   filter(NACCETPR %in% c(1, 88)) %>%
  #   group_by(race) %>%
  #   nest() %>%
  #   mutate(
  #     outcome = "AD + MCI",
  #     surv = map(data, surv_mod),
  #     res = map2(surv, data, caide_cox_fit),
  #   ), 
  # 
  # dat_lv %>%
  #   filter(NACCETPR %in% c(1, 88)) %>%
  #   filter(NACCUDSD %nin% c(3)) %>%
  #   group_by(race) %>%
  #   nest() %>%
  #   mutate(
  #     outcome = "AD",
  #     surv = map(data, surv_mod),
  #     res = map2(surv, data, caide_cox_fit),
  #   ),
) %>%
  mutate(df = map(res, tidy)) %>%
  select(-data, -surv)


caide_cox_res_df <- caide_cox_res %>%
  select(race, outcome, df) %>%
  unnest(cols = df) %>%
  ungroup() %>%
  mutate(
    lci = estimate - (std.error * 1.96),
    hci = estimate + (std.error * 1.96), 
    hr = exp(estimate),
    hr_lci = exp(lci),
    hr_hci = exp(hci),
    term = str_replace(term, "apoe", ""), 
    term = fct_relevel(term, 'e2+', 'e4+', 'z_caide'),    
    )

group_split(caide_cox_res_df, race)

```

#### Plots

```{r}


theme.size = 8

cox_coeff_plot <- function(x){
  x %>%
    mutate(race = fct_relevel(race, 'Black', 'Hispanic', 'Asian',  'NHW'), 
        term = fct_recode(term, "ε2+" = "e2+", "ε4+" = "e4+", "CAIDE" = "z_caide", "mCAIDE" = "z_mcaide"),
        ) %>%
  ggplot(., aes(x = race, y = hr, color = race)) + 
    facet_grid(cols = vars(term), rows = vars(outcome)) + 
    geom_hline(yintercept = 1, linetype = 2) + 
    geom_point() + 
    geom_linerange(aes(ymin = hr_lci, ymax = hr_hci), linewidth = 0.75) + 
    scale_y_continuous("Hazards Ratio", trans = 'log', 
                       breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32), 
                       labels = c(0.25, 0.5, 1, 2, 4, 8, 16, 32)
    ) + 
    scale_color_manual(values = c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3")) + 
    theme_bw() + 
    theme(
      text = element_text(size = theme.size),
      axis.text.x = element_text(angle = 315, vjust = 0.5, hjust=0), 
      axis.title.x = element_blank(),
      legend.position = "bottom", 
      strip.background = element_blank(), 
      strip.text = element_text(face = 'bold')
      )
  }

caide_e2_cox_p <- filter(caide_cox_res_df, term == "e2+") %>% cox_coeff_plot(.) 
caide_e4_cox_p <- filter(caide_cox_res_df, term == "e4+") %>% cox_coeff_plot(.) 
caide_cox_p <- filter(caide_cox_res_df, term == "z_caide") %>% cox_coeff_plot(.) 


caide_e2_cox_p
caide_e4_cox_p
caide_cox_p

```

### mCAIDE

#### KM Curves

```{r}
mcaide.survfit <- survfit(Surv(aoo, dx_aoo) ~ mcaide_cat, start.time=55, data = dat_lv)

ggsurvplot(mcaide.survfit, data = dat_lv, risk.table = TRUE,  pval = TRUE, 
           palette = "Set1",
           ggtheme = theme_minimal()) 

all_cox_res <- coxph(dat.surv ~ z_mcaide + apoe + race, data=dat_lv)

```

#### Cox Regression

```{r}
## Cox model
mcaide_cox_fit <- function(surv, data){
  coxph(surv ~ z_mcaide + apoe, data=data)
}

## results 
mcaide_cox_res <- bind_rows(
  dat_lv %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD + MCI",
      surv = map(data, surv_mod),
      res = map2(surv, data, mcaide_cox_fit),
    ), 

  dat_lv %>%
    filter(NACCUDSD %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD",
      surv = map(data, surv_mod),
      res = map2(surv, data, mcaide_cox_fit),
    ), 
  
  dat_lv %>%
    filter(NACCETPR %in% c(1, 88)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD + MCI",
      surv = map(data, surv_mod),
      res = map2(surv, data, mcaide_cox_fit),
    ), 

  dat_lv %>%
    filter(NACCETPR %in% c(1, 88)) %>%
    filter(NACCUDSD %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD",
      surv = map(data, surv_mod),
      res = map2(surv, data, mcaide_cox_fit),
    ),
) %>%
  mutate(df = map(res, tidy)) %>%
  select(-data, -surv)


mcaide_cox_res_df <- mcaide_cox_res %>%
  select(race, outcome, df) %>%
  unnest(cols = df) %>%
  ungroup() %>%
  mutate(
    lci = estimate - (std.error * 1.96),
    hci = estimate + (std.error * 1.96), 
    hr = exp(estimate),
    hr_lci = exp(lci),
    hr_hci = exp(hci),
    term = str_replace(term, "apoe", ""), 
    term = fct_relevel(term, 'e2+', 'e4+', 'z_mcaide'),    
    )


```

#### Plots

```{r}

mcaide_e2_cox_p <- filter(mcaide_cox_res_df, term == "e2+") %>% cox_coeff_plot(.) 
mcaide_e4_cox_p <- filter(mcaide_cox_res_df, term == "e4+") %>% cox_coeff_plot(.) 
mcaide_cox_p <- filter(mcaide_cox_res_df, term == "z_mcaide") %>% cox_coeff_plot(.) 


mcaide_e2_cox_p
mcaide_e4_cox_p
mcaide_cox_p

```

### Risk factors

#### KM Curves

```{r}
rf.survfit <- survfit(Surv(aoo, dx_aoo) ~ race, start.time=55, data = dat_lv)

ggsurvplot(rf.survfit, data = dat_lv, risk.table = TRUE,  pval = TRUE, 
           palette = "Set1",
           ggtheme = theme_minimal()) 

rf_cox_res <- coxph(dat.surv ~ race + apoe + SEX + i_EDUC + i_NACCBMI + i_BPSYS + i_hypchol, data=dat_lv)
rf_cox_interaction_res <- coxph(dat.surv ~ race * apoe + SEX + i_EDUC + i_NACCBMI + i_BPSYS + i_hypchol, data=dat_lv)

```

#### Cox Regression Models

```{r}
## Cox model
rf_cox_fit <- function(surv, data){
  coxph(surv ~ SEX + i_EDUC + i_NACCBMI + i_BPSYS + i_hypchol + apoe, data=data)
}

## results 
rf_cox_res <- bind_rows(
  dat_lv %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD + MCI",
      surv = map(data, surv_mod),
      res = map2(surv, data, rf_cox_fit),
    ), 

  dat_lv %>%
    filter(NACCUDSD %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "ADRD",
      surv = map(data, surv_mod),
      res = map2(surv, data, rf_cox_fit),
    ), 
  
  dat_lv %>%
    filter(NACCETPR %in% c(1, 88)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD + MCI",
      surv = map(data, surv_mod),
      res = map2(surv, data, rf_cox_fit),
    ), 

  dat_lv %>%
    filter(NACCETPR %in% c(1, 88)) %>%
    filter(NACCUDSD %nin% c(3)) %>%
    group_by(race) %>%
    nest() %>%
    mutate(
      outcome = "AD",
      surv = map(data, surv_mod),
      res = map2(surv, data, rf_cox_fit),
    ),
) %>%
  mutate(df = map(res, tidy)) %>%
  select(-data, -surv)


rf_cox_res_df <- rf_cox_res %>%
  select(race, outcome, df) %>%
  unnest(cols = df) %>%
  ungroup() %>%
  filter(!str_detect(term, 'Intercept')) %>%
  mutate(
    lci = estimate - (std.error * 1.96),
    hci = estimate + (std.error * 1.96), 
    hr = exp(estimate),
    hr_lci = exp(lci),
    hr_hci = exp(hci),
    term = str_replace(term, "apoe", ""), 
    term = fct_recode(term, "Female" = "SEX2", "Education" = 'i_EDUC', 
                      "BMI" = "i_NACCBMI", 'SBP' = "i_BPSYS", "Hyprchol." = 'i_hypchol1'),
    term = fct_relevel(term, 'e2+', 'e4+', "Female", "Education", "BMI", "SBP", "Hyprchol."),    
    race = fct_relevel(race, 'Black', 'Hispanic', 'Asian',  'NHW'),
  )

group_split(rf_cox_res_df, race)
```
